

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Fri Nov 03 15:43:44 2023

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=3
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    20                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text9,local,class=CODE,merge=1,delta=2
    23                           	psect	text10,local,class=CODE,merge=1,delta=2
    24                           	psect	text11,local,class=CODE,merge=1,delta=2
    25                           	psect	text12,local,class=CODE,merge=1,delta=2
    26                           	psect	text13,local,class=CODE,merge=1,delta=2
    27                           	psect	text14,local,class=CODE,merge=1,delta=2
    28                           	psect	text15,local,class=CODE,merge=1,delta=2
    29                           	psect	text16,local,class=CODE,merge=1,delta=2
    30                           	psect	text17,local,class=CODE,merge=1,delta=2
    31                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    32                           	dabs	1,0x7E,2
    33     0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC16F887 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68     0000                     	;# 
    69     0001                     	;# 
    70     0002                     	;# 
    71     0003                     	;# 
    72     0004                     	;# 
    73     0005                     	;# 
    74     0006                     	;# 
    75     0007                     	;# 
    76     0008                     	;# 
    77     0009                     	;# 
    78     000A                     	;# 
    79     000B                     	;# 
    80     000C                     	;# 
    81     000D                     	;# 
    82     000E                     	;# 
    83     000E                     	;# 
    84     000F                     	;# 
    85     0010                     	;# 
    86     0011                     	;# 
    87     0012                     	;# 
    88     0013                     	;# 
    89     0014                     	;# 
    90     0015                     	;# 
    91     0015                     	;# 
    92     0016                     	;# 
    93     0017                     	;# 
    94     0018                     	;# 
    95     0019                     	;# 
    96     001A                     	;# 
    97     001B                     	;# 
    98     001B                     	;# 
    99     001C                     	;# 
   100     001D                     	;# 
   101     001E                     	;# 
   102     001F                     	;# 
   103     0081                     	;# 
   104     0085                     	;# 
   105     0086                     	;# 
   106     0087                     	;# 
   107     0088                     	;# 
   108     0089                     	;# 
   109     008C                     	;# 
   110     008D                     	;# 
   111     008E                     	;# 
   112     008F                     	;# 
   113     0090                     	;# 
   114     0091                     	;# 
   115     0092                     	;# 
   116     0093                     	;# 
   117     0093                     	;# 
   118     0093                     	;# 
   119     0094                     	;# 
   120     0095                     	;# 
   121     0096                     	;# 
   122     0097                     	;# 
   123     0098                     	;# 
   124     0099                     	;# 
   125     009A                     	;# 
   126     009B                     	;# 
   127     009C                     	;# 
   128     009D                     	;# 
   129     009E                     	;# 
   130     009F                     	;# 
   131     0105                     	;# 
   132     0107                     	;# 
   133     0108                     	;# 
   134     0109                     	;# 
   135     010C                     	;# 
   136     010C                     	;# 
   137     010D                     	;# 
   138     010E                     	;# 
   139     010F                     	;# 
   140     0185                     	;# 
   141     0187                     	;# 
   142     0188                     	;# 
   143     0189                     	;# 
   144     018C                     	;# 
   145     018D                     	;# 
   146     0000                     	;# 
   147     0001                     	;# 
   148     0002                     	;# 
   149     0003                     	;# 
   150     0004                     	;# 
   151     0005                     	;# 
   152     0006                     	;# 
   153     0007                     	;# 
   154     0008                     	;# 
   155     0009                     	;# 
   156     000A                     	;# 
   157     000B                     	;# 
   158     000C                     	;# 
   159     000D                     	;# 
   160     000E                     	;# 
   161     000E                     	;# 
   162     000F                     	;# 
   163     0010                     	;# 
   164     0011                     	;# 
   165     0012                     	;# 
   166     0013                     	;# 
   167     0014                     	;# 
   168     0015                     	;# 
   169     0015                     	;# 
   170     0016                     	;# 
   171     0017                     	;# 
   172     0018                     	;# 
   173     0019                     	;# 
   174     001A                     	;# 
   175     001B                     	;# 
   176     001B                     	;# 
   177     001C                     	;# 
   178     001D                     	;# 
   179     001E                     	;# 
   180     001F                     	;# 
   181     0081                     	;# 
   182     0085                     	;# 
   183     0086                     	;# 
   184     0087                     	;# 
   185     0088                     	;# 
   186     0089                     	;# 
   187     008C                     	;# 
   188     008D                     	;# 
   189     008E                     	;# 
   190     008F                     	;# 
   191     0090                     	;# 
   192     0091                     	;# 
   193     0092                     	;# 
   194     0093                     	;# 
   195     0093                     	;# 
   196     0093                     	;# 
   197     0094                     	;# 
   198     0095                     	;# 
   199     0096                     	;# 
   200     0097                     	;# 
   201     0098                     	;# 
   202     0099                     	;# 
   203     009A                     	;# 
   204     009B                     	;# 
   205     009C                     	;# 
   206     009D                     	;# 
   207     009E                     	;# 
   208     009F                     	;# 
   209     0105                     	;# 
   210     0107                     	;# 
   211     0108                     	;# 
   212     0109                     	;# 
   213     010C                     	;# 
   214     010C                     	;# 
   215     010D                     	;# 
   216     010E                     	;# 
   217     010F                     	;# 
   218     0185                     	;# 
   219     0187                     	;# 
   220     0188                     	;# 
   221     0189                     	;# 
   222     018C                     	;# 
   223     018D                     	;# 
   224     0000                     	;# 
   225     0001                     	;# 
   226     0002                     	;# 
   227     0003                     	;# 
   228     0004                     	;# 
   229     0005                     	;# 
   230     0006                     	;# 
   231     0007                     	;# 
   232     0008                     	;# 
   233     0009                     	;# 
   234     000A                     	;# 
   235     000B                     	;# 
   236     000C                     	;# 
   237     000D                     	;# 
   238     000E                     	;# 
   239     000E                     	;# 
   240     000F                     	;# 
   241     0010                     	;# 
   242     0011                     	;# 
   243     0012                     	;# 
   244     0013                     	;# 
   245     0014                     	;# 
   246     0015                     	;# 
   247     0015                     	;# 
   248     0016                     	;# 
   249     0017                     	;# 
   250     0018                     	;# 
   251     0019                     	;# 
   252     001A                     	;# 
   253     001B                     	;# 
   254     001B                     	;# 
   255     001C                     	;# 
   256     001D                     	;# 
   257     001E                     	;# 
   258     001F                     	;# 
   259     0081                     	;# 
   260     0085                     	;# 
   261     0086                     	;# 
   262     0087                     	;# 
   263     0088                     	;# 
   264     0089                     	;# 
   265     008C                     	;# 
   266     008D                     	;# 
   267     008E                     	;# 
   268     008F                     	;# 
   269     0090                     	;# 
   270     0091                     	;# 
   271     0092                     	;# 
   272     0093                     	;# 
   273     0093                     	;# 
   274     0093                     	;# 
   275     0094                     	;# 
   276     0095                     	;# 
   277     0096                     	;# 
   278     0097                     	;# 
   279     0098                     	;# 
   280     0099                     	;# 
   281     009A                     	;# 
   282     009B                     	;# 
   283     009C                     	;# 
   284     009D                     	;# 
   285     009E                     	;# 
   286     009F                     	;# 
   287     0105                     	;# 
   288     0107                     	;# 
   289     0108                     	;# 
   290     0109                     	;# 
   291     010C                     	;# 
   292     010C                     	;# 
   293     010D                     	;# 
   294     010E                     	;# 
   295     010F                     	;# 
   296     0185                     	;# 
   297     0187                     	;# 
   298     0188                     	;# 
   299     0189                     	;# 
   300     018C                     	;# 
   301     018D                     	;# 
   302     0000                     	;# 
   303     0001                     	;# 
   304     0002                     	;# 
   305     0003                     	;# 
   306     0004                     	;# 
   307     0005                     	;# 
   308     0006                     	;# 
   309     0007                     	;# 
   310     0008                     	;# 
   311     0009                     	;# 
   312     000A                     	;# 
   313     000B                     	;# 
   314     000C                     	;# 
   315     000D                     	;# 
   316     000E                     	;# 
   317     000E                     	;# 
   318     000F                     	;# 
   319     0010                     	;# 
   320     0011                     	;# 
   321     0012                     	;# 
   322     0013                     	;# 
   323     0014                     	;# 
   324     0015                     	;# 
   325     0015                     	;# 
   326     0016                     	;# 
   327     0017                     	;# 
   328     0018                     	;# 
   329     0019                     	;# 
   330     001A                     	;# 
   331     001B                     	;# 
   332     001B                     	;# 
   333     001C                     	;# 
   334     001D                     	;# 
   335     001E                     	;# 
   336     001F                     	;# 
   337     0081                     	;# 
   338     0085                     	;# 
   339     0086                     	;# 
   340     0087                     	;# 
   341     0088                     	;# 
   342     0089                     	;# 
   343     008C                     	;# 
   344     008D                     	;# 
   345     008E                     	;# 
   346     008F                     	;# 
   347     0090                     	;# 
   348     0091                     	;# 
   349     0092                     	;# 
   350     0093                     	;# 
   351     0093                     	;# 
   352     0093                     	;# 
   353     0094                     	;# 
   354     0095                     	;# 
   355     0096                     	;# 
   356     0097                     	;# 
   357     0098                     	;# 
   358     0099                     	;# 
   359     009A                     	;# 
   360     009B                     	;# 
   361     009C                     	;# 
   362     009D                     	;# 
   363     009E                     	;# 
   364     009F                     	;# 
   365     0105                     	;# 
   366     0107                     	;# 
   367     0108                     	;# 
   368     0109                     	;# 
   369     010C                     	;# 
   370     010C                     	;# 
   371     010D                     	;# 
   372     010E                     	;# 
   373     010F                     	;# 
   374     0185                     	;# 
   375     0187                     	;# 
   376     0188                     	;# 
   377     0189                     	;# 
   378     018C                     	;# 
   379     018D                     	;# 
   380     0000                     	;# 
   381     0001                     	;# 
   382     0002                     	;# 
   383     0003                     	;# 
   384     0004                     	;# 
   385     0005                     	;# 
   386     0006                     	;# 
   387     0007                     	;# 
   388     0008                     	;# 
   389     0009                     	;# 
   390     000A                     	;# 
   391     000B                     	;# 
   392     000C                     	;# 
   393     000D                     	;# 
   394     000E                     	;# 
   395     000E                     	;# 
   396     000F                     	;# 
   397     0010                     	;# 
   398     0011                     	;# 
   399     0012                     	;# 
   400     0013                     	;# 
   401     0014                     	;# 
   402     0015                     	;# 
   403     0015                     	;# 
   404     0016                     	;# 
   405     0017                     	;# 
   406     0018                     	;# 
   407     0019                     	;# 
   408     001A                     	;# 
   409     001B                     	;# 
   410     001B                     	;# 
   411     001C                     	;# 
   412     001D                     	;# 
   413     001E                     	;# 
   414     001F                     	;# 
   415     0081                     	;# 
   416     0085                     	;# 
   417     0086                     	;# 
   418     0087                     	;# 
   419     0088                     	;# 
   420     0089                     	;# 
   421     008C                     	;# 
   422     008D                     	;# 
   423     008E                     	;# 
   424     008F                     	;# 
   425     0090                     	;# 
   426     0091                     	;# 
   427     0092                     	;# 
   428     0093                     	;# 
   429     0093                     	;# 
   430     0093                     	;# 
   431     0094                     	;# 
   432     0095                     	;# 
   433     0096                     	;# 
   434     0097                     	;# 
   435     0098                     	;# 
   436     0099                     	;# 
   437     009A                     	;# 
   438     009B                     	;# 
   439     009C                     	;# 
   440     009D                     	;# 
   441     009E                     	;# 
   442     009F                     	;# 
   443     0105                     	;# 
   444     0107                     	;# 
   445     0108                     	;# 
   446     0109                     	;# 
   447     010C                     	;# 
   448     010C                     	;# 
   449     010D                     	;# 
   450     010E                     	;# 
   451     010F                     	;# 
   452     0185                     	;# 
   453     0187                     	;# 
   454     0188                     	;# 
   455     0189                     	;# 
   456     018C                     	;# 
   457     018D                     	;# 
   458                           
   459                           	psect	idataBANK0
   460     02B4                     __pidataBANK0:
   461                           
   462                           ;initializer for keypad_getkey@F1268
   463     02B4  3431               	retlw	49
   464     02B5  3432               	retlw	50
   465     02B6  3433               	retlw	51
   466     02B7  3441               	retlw	65
   467     02B8  3434               	retlw	52
   468     02B9  3435               	retlw	53
   469     02BA  3436               	retlw	54
   470     02BB  3442               	retlw	66
   471     02BC  3437               	retlw	55
   472     02BD  3438               	retlw	56
   473     02BE  3439               	retlw	57
   474     02BF  3443               	retlw	67
   475     02C0  342A               	retlw	42
   476     02C1  3430               	retlw	48
   477     02C2  3423               	retlw	35
   478     02C3  3444               	retlw	68
   479                           
   480                           	psect	strings
   481     0003                     __pstrings:
   482     0003                     stringtab:
   483     0003                     __stringtab:
   484                           
   485                           ;	String table - string pointers are 1 byte each
   486     0003  1BFF               	btfsc	btemp+1,7
   487     0004  280D               	ljmp	stringcode
   488     0005  1383               	bcf	3,7
   489     0006  187F               	btfsc	btemp+1,0
   490     0007  1783               	bsf	3,7
   491     0008  0800               	movf	0,w
   492     0009  0A84               	incf	4,f
   493     000A  1903               	skipnz
   494     000B  0AFF               	incf	btemp+1,f
   495     000C  0008               	return
   496     000D                     stringcode:
   497     000D                     stringdir:
   498     000D  3000               	movlw	high stringdir
   499     000E  008A               	movwf	10
   500     000F  0804               	movf	4,w
   501     0010  0A84               	incf	4,f
   502     0011  0782               	addwf	2,f
   503     0012                     __stringbase:
   504     0012  3400               	retlw	0
   505     0013                     __end_of__stringtab:
   506     0013                     _dpowers:
   507     0013  3401               	retlw	1
   508     0014  3400               	retlw	0
   509     0015  340A               	retlw	10
   510     0016  3400               	retlw	0
   511     0017  3464               	retlw	100
   512     0018  3400               	retlw	0
   513     0019  34E8               	retlw	232
   514     001A  3403               	retlw	3
   515     001B  3410               	retlw	16
   516     001C  3427               	retlw	39
   517     001D                     __end_of_dpowers:
   518     001D                     _password:
   519     001D  3432               	retlw	50
   520     001E  3437               	retlw	55
   521     001F  3430               	retlw	48
   522     0020  3439               	retlw	57
   523     0021  3400               	retlw	0
   524     0022                     __end_of_password:
   525     0009                     _PORTE	set	9
   526     0006                     _PORTB	set	6
   527     0008                     _PORTD	set	8
   528     003A                     _RC2	set	58
   529     0038                     _RC0	set	56
   530     0039                     _RC1	set	57
   531     0041                     _RD1	set	65
   532     0040                     _RD0	set	64
   533     0087                     _TRISC	set	135
   534     008F                     _OSCCON	set	143
   535     0089                     _TRISE	set	137
   536     0081                     _OPTION_REGbits	set	129
   537     0086                     _TRISB	set	134
   538     0088                     _TRISD	set	136
   539     0189                     _ANSELH	set	393
   540     0022                     STR_1:
   541     0022  3469               	retlw	105	;'i'
   542     0023  3472               	retlw	114	;'r'
   543     0024  343D               	retlw	61	;'='
   544     0025  3425               	retlw	37	;'%'
   545     0026  3464               	retlw	100	;'d'
   546     0027  342C               	retlw	44	;','
   547     0028  3468               	retlw	104	;'h'
   548     0029  346C               	retlw	108	;'l'
   549     002A  343D               	retlw	61	;'='
   550     002B  3425               	retlw	37	;'%'
   551     002C  3464               	retlw	100	;'d'
   552     002D  342C               	retlw	44	;','
   553     002E  346D               	retlw	109	;'m'
   554     002F  3474               	retlw	116	;'t'
   555     0030  343D               	retlw	61	;'='
   556     0031  3425               	retlw	37	;'%'
   557     0032  3464               	retlw	100	;'d'
   558     0033  3400               	retlw	0
   559     0034                     STR_6:
   560     0034  3473               	retlw	115	;'s'
   561     0035  3469               	retlw	105	;'i'
   562     0036  3473               	retlw	115	;'s'
   563     0037  3474               	retlw	116	;'t'
   564     0038  3465               	retlw	101	;'e'
   565     0039  346D               	retlw	109	;'m'
   566     003A  3461               	retlw	97	;'a'
   567     003B  3420               	retlw	32	;' '
   568     003C  3462               	retlw	98	;'b'
   569     003D  346C               	retlw	108	;'l'
   570     003E  346F               	retlw	111	;'o'
   571     003F  3471               	retlw	113	;'q'
   572     0040  3475               	retlw	117	;'u'
   573     0041  3465               	retlw	101	;'e'
   574     0042  3461               	retlw	97	;'a'
   575     0043  3464               	retlw	100	;'d'
   576     0044  346F               	retlw	111	;'o'
   577     0045  3400               	retlw	0
   578     0046                     STR_4:
   579     0046  3443               	retlw	67	;'C'
   580     0047  346C               	retlw	108	;'l'
   581     0048  3461               	retlw	97	;'a'
   582     0049  3476               	retlw	118	;'v'
   583     004A  3465               	retlw	101	;'e'
   584     004B  3420               	retlw	32	;' '
   585     004C  3449               	retlw	73	;'I'
   586     004D  346E               	retlw	110	;'n'
   587     004E  3463               	retlw	99	;'c'
   588     004F  346F               	retlw	111	;'o'
   589     0050  3472               	retlw	114	;'r'
   590     0051  3472               	retlw	114	;'r'
   591     0052  3465               	retlw	101	;'e'
   592     0053  3463               	retlw	99	;'c'
   593     0054  3474               	retlw	116	;'t'
   594     0055  3461               	retlw	97	;'a'
   595     0056  3400               	retlw	0
   596     0057                     STR_3:
   597     0057  3443               	retlw	67	;'C'
   598     0058  346C               	retlw	108	;'l'
   599     0059  3461               	retlw	97	;'a'
   600     005A  3476               	retlw	118	;'v'
   601     005B  3465               	retlw	101	;'e'
   602     005C  3420               	retlw	32	;' '
   603     005D  3443               	retlw	67	;'C'
   604     005E  346F               	retlw	111	;'o'
   605     005F  3472               	retlw	114	;'r'
   606     0060  3472               	retlw	114	;'r'
   607     0061  3465               	retlw	101	;'e'
   608     0062  3463               	retlw	99	;'c'
   609     0063  3474               	retlw	116	;'t'
   610     0064  3461               	retlw	97	;'a'
   611     0065  3400               	retlw	0
   612     0066                     STR_2:
   613     0066  3450               	retlw	80	;'P'
   614     0067  3472               	retlw	114	;'r'
   615     0068  3465               	retlw	101	;'e'
   616     0069  3473               	retlw	115	;'s'
   617     006A  3473               	retlw	115	;'s'
   618     006B  3420               	retlw	32	;' '
   619     006C  3461               	retlw	97	;'a'
   620     006D  3420               	retlw	32	;' '
   621     006E  344B               	retlw	75	;'K'
   622     006F  3465               	retlw	101	;'e'
   623     0070  3479               	retlw	121	;'y'
   624     0071  3400               	retlw	0
   625     0072                     STR_5:
   626     0072  3441               	retlw	65	;'A'
   627     0073  346C               	retlw	108	;'l'
   628     0074  3461               	retlw	97	;'a'
   629     0075  3472               	retlw	114	;'r'
   630     0076  346D               	retlw	109	;'m'
   631     0077  3461               	retlw	97	;'a'
   632     0078  3420               	retlw	32	;' '
   633     0079  343F               	retlw	63	;'?'
   634     007A  3400               	retlw	0
   635                           
   636                           	psect	cinit
   637     07E6                     start_initialization:	
   638                           ; #config settings
   639                           
   640     07E6                     __initialization:
   641                           
   642                           ; Initialize objects allocated to BANK0
   643     07E6  1383               	bcf	3,7	;select IRP bank0
   644     07E7  3065               	movlw	low (__pdataBANK0+16)
   645     07E8  00FD               	movwf	btemp+-1
   646     07E9  3002               	movlw	high __pidataBANK0
   647     07EA  00FE               	movwf	btemp
   648     07EB  30B4               	movlw	low __pidataBANK0
   649     07EC  00FF               	movwf	btemp+1
   650     07ED  3055               	movlw	low __pdataBANK0
   651     07EE  0084               	movwf	4
   652     07EF  120A  118A  22C8  120A  118A  	fcall	init_ram0
   653                           
   654                           ; Clear objects allocated to BANK0
   655     07F4  3020               	movlw	low __pbssBANK0
   656     07F5  0084               	movwf	4
   657     07F6  303C               	movlw	low (__pbssBANK0+28)
   658     07F7  120A  118A  228D  120A  118A  	fcall	clear_ram0
   659     07FC                     end_of_initialization:	
   660                           ;End of C runtime variable initialization code
   661                           
   662     07FC                     __end_of__initialization:
   663     07FC  0183               	clrf	3
   664     07FD  120A  118A  2D24   	ljmp	_main	;jump to C main() function
   665                           
   666                           	psect	bssBANK0
   667     0020                     __pbssBANK0:
   668     0020                     _intentos:
   669     0020                     	ds	1
   670     0021                     _var_sensor_metal:
   671     0021                     	ds	1
   672     0022                     _var_sensor_hall:
   673     0022                     	ds	1
   674     0023                     _var_sensor_ir:
   675     0023                     	ds	1
   676     0024                     _idx:
   677     0024                     	ds	1
   678     0025                     _estado:
   679     0025                     	ds	1
   680     0026                     _buffer:
   681     0026                     	ds	17
   682     0037                     _pass_user:
   683     0037                     	ds	5
   684                           
   685                           	psect	dataBANK0
   686     0055                     __pdataBANK0:
   687     0055                     keypad_getkey@F1268:
   688     0055                     	ds	16
   689                           
   690                           	psect	inittext
   691     02C4                     init_fetch0:	
   692                           ;	Called with low address in FSR and high address in W
   693                           
   694     02C4  087E               	movf	btemp,w
   695     02C5  008A               	movwf	10
   696     02C6  087F               	movf	btemp+1,w
   697     02C7  0082               	movwf	2
   698     02C8                     init_ram0:	
   699                           ;Called with:
   700                           ;	high address of idata address in btemp 
   701                           ;	low address of idata address in btemp+1 
   702                           ;	low address of data in FSR
   703                           ;	high address + 1 of data in btemp-1
   704                           
   705     02C8  120A  118A  22C4  120A  118A  	fcall	init_fetch0
   706     02CD  0080               	movwf	0
   707     02CE  0A84               	incf	4,f
   708     02CF  0804               	movf	4,w
   709     02D0  067D               	xorwf	btemp+-1,w
   710     02D1  1903               	btfsc	3,2
   711     02D2  3400               	retlw	0
   712     02D3  0AFF               	incf	btemp+1,f
   713     02D4  1903               	btfsc	3,2
   714     02D5  0AFE               	incf	btemp,f
   715     02D6  2AC8               	goto	init_ram0
   716                           
   717                           	psect	clrtext
   718     028D                     clear_ram0:	
   719                           ;	Called with FSR containing the base address, and
   720                           ;	W with the last address+1
   721                           
   722     028D  0064               	clrwdt	;clear the watchdog before getting into this loop
   723     028E                     clrloop0:
   724     028E  0180               	clrf	0	;clear RAM location pointed to by FSR
   725     028F  0A84               	incf	4,f	;increment pointer
   726     0290  0604               	xorwf	4,w	;XOR with final address
   727     0291  1903               	btfsc	3,2	;have we reached the end yet?
   728     0292  3400               	retlw	0	;all done for this memory range, return
   729     0293  0604               	xorwf	4,w	;XOR again to restore value
   730     0294  2A8E               	goto	clrloop0	;do the next byte
   731                           
   732                           	psect	cstackCOMMON
   733     0070                     __pcstackCOMMON:
   734     0070                     ?_LCD_Command:
   735     0070                     ??_LCD_Command:	
   736                           ; 1 bytes @ 0x0
   737                           
   738     0070                     ?_function_seguridad:	
   739                           ; 1 bytes @ 0x0
   740                           
   741     0070                     ?_function_monitoreo:	
   742                           ; 1 bytes @ 0x0
   743                           
   744     0070                     ?_function_bloqueado:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0070                     ?_function_alarma:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0070                     ?_monitoring_sensor:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0070                     ??_monitoring_sensor:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0070                     ?_LCD_Init:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     0070                     ?_LCD_Char:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     ??_LCD_Char:	
   763                           ; 1 bytes @ 0x0
   764                           
   765     0070                     ?_LCD_Clear:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     ?_keypad_init:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ??_keypad_init:	
   772                           ; 1 bytes @ 0x0
   773                           
   774     0070                     ?_keypad_getkey:	
   775                           ; 1 bytes @ 0x0
   776                           
   777     0070                     ??_keypad_getkey:	
   778                           ; 1 bytes @ 0x0
   779                           
   780     0070                     ?_main:	
   781                           ; 1 bytes @ 0x0
   782                           
   783     0070                     ?_strncmp:	
   784                           ; 1 bytes @ 0x0
   785                           
   786     0070                     ?___lwdiv:	
   787                           ; 2 bytes @ 0x0
   788                           
   789     0070                     monitoring_sensor@alarm_activ:	
   790                           ; 2 bytes @ 0x0
   791                           
   792     0070                     strncmp@s2:	
   793                           ; 1 bytes @ 0x0
   794                           
   795     0070                     ___lwdiv@divisor:	
   796                           ; 1 bytes @ 0x0
   797                           
   798                           
   799                           ; 2 bytes @ 0x0
   800     0070                     	ds	1
   801     0071                     strncmp@len:
   802                           
   803                           ; 2 bytes @ 0x1
   804     0071                     	ds	1
   805     0072                     LCD_Command@cmd:
   806     0072                     LCD_Char@dat:	
   807                           ; 1 bytes @ 0x2
   808                           
   809     0072                     ___lwdiv@dividend:	
   810                           ; 1 bytes @ 0x2
   811                           
   812                           
   813                           ; 2 bytes @ 0x2
   814     0072                     	ds	1
   815     0073                     ??_strncmp:
   816     0073                     ??_LCD_Init:	
   817                           ; 1 bytes @ 0x3
   818                           
   819     0073                     ?_LCD_String:	
   820                           ; 1 bytes @ 0x3
   821                           
   822     0073                     ??_LCD_Clear:	
   823                           ; 1 bytes @ 0x3
   824                           
   825     0073                     LCD_String@msg:	
   826                           ; 1 bytes @ 0x3
   827                           
   828                           
   829                           ; 2 bytes @ 0x3
   830     0073                     	ds	1
   831     0074                     ??___lwdiv:
   832     0074                     ___lwdiv@quotient:	
   833                           ; 1 bytes @ 0x4
   834                           
   835                           
   836                           ; 2 bytes @ 0x4
   837     0074                     	ds	1
   838     0075                     ??_LCD_String:
   839     0075                     ?_LCD_String_xy:	
   840                           ; 1 bytes @ 0x5
   841                           
   842     0075                     LCD_String_xy@pos:	
   843                           ; 1 bytes @ 0x5
   844                           
   845     0075                     strncmp@s1:	
   846                           ; 1 bytes @ 0x5
   847                           
   848                           
   849                           ; 1 bytes @ 0x5
   850     0075                     	ds	1
   851     0076                     ___lwdiv@counter:
   852     0076                     LCD_String_xy@msg:	
   853                           ; 1 bytes @ 0x6
   854                           
   855                           
   856                           ; 2 bytes @ 0x6
   857     0076                     	ds	1
   858     0077                     ?___lwmod:
   859     0077                     ___lwmod@divisor:	
   860                           ; 2 bytes @ 0x7
   861                           
   862                           
   863                           ; 2 bytes @ 0x7
   864     0077                     	ds	1
   865     0078                     ??_LCD_String_xy:
   866     0078                     LCD_String_xy@row:	
   867                           ; 1 bytes @ 0x8
   868                           
   869                           
   870                           ; 1 bytes @ 0x8
   871     0078                     	ds	1
   872     0079                     LCD_String_xy@location:
   873     0079                     ___lwmod@dividend:	
   874                           ; 1 bytes @ 0x9
   875                           
   876                           
   877                           ; 2 bytes @ 0x9
   878     0079                     	ds	1
   879     007A                     ??_function_seguridad:
   880     007A                     ??_function_bloqueado:	
   881                           ; 1 bytes @ 0xA
   882                           
   883     007A                     ??_function_alarma:	
   884                           ; 1 bytes @ 0xA
   885                           
   886                           
   887                           ; 1 bytes @ 0xA
   888     007A                     	ds	1
   889     007B                     ??___lwmod:
   890     007B                     ___lwmod@counter:	
   891                           ; 1 bytes @ 0xB
   892                           
   893                           
   894                           ; 1 bytes @ 0xB
   895     007B                     	ds	2
   896     007D                     function_seguridad@key:
   897                           
   898                           ; 1 bytes @ 0xD
   899     007D                     	ds	1
   900     007E                     ??_main:
   901                           
   902                           	psect	cstackBANK0
   903     003C                     __pcstackBANK0:	
   904                           ; 1 bytes @ 0xE
   905                           
   906     003C                     ?_sprintf:
   907     003C                     sprintf@f:	
   908                           ; 2 bytes @ 0x0
   909                           
   910     003C                     keypad_getkey@letras:	
   911                           ; 1 bytes @ 0x0
   912                           
   913                           
   914                           ; 16 bytes @ 0x0
   915     003C                     	ds	7
   916     0043                     ??_sprintf:
   917                           
   918                           ; 1 bytes @ 0x7
   919     0043                     	ds	3
   920     0046                     sprintf@ap:
   921                           
   922                           ; 1 bytes @ 0xA
   923     0046                     	ds	1
   924     0047                     sprintf@flag:
   925                           
   926                           ; 1 bytes @ 0xB
   927     0047                     	ds	1
   928     0048                     sprintf@ccnt:
   929                           
   930                           ; 2 bytes @ 0xC
   931     0048                     	ds	2
   932     004A                     sprintf@prec:
   933                           
   934                           ; 1 bytes @ 0xE
   935     004A                     	ds	1
   936     004B                     sprintf@val:
   937                           
   938                           ; 2 bytes @ 0xF
   939     004B                     	ds	1
   940     004C                     keypad_getkey@valor:
   941                           
   942                           ; 1 bytes @ 0x10
   943     004C                     	ds	1
   944     004D                     sprintf@sp:
   945     004D                     keypad_getkey@i:	
   946                           ; 1 bytes @ 0x11
   947                           
   948                           
   949                           ; 2 bytes @ 0x11
   950     004D                     	ds	1
   951     004E                     sprintf@c:
   952                           
   953                           ; 1 bytes @ 0x12
   954     004E                     	ds	1
   955     004F                     ??_function_monitoreo:
   956                           
   957                           ; 1 bytes @ 0x13
   958     004F                     	ds	6
   959                           
   960                           	psect	maintext
   961     0524                     __pmaintext:	
   962 ;;
   963 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   964 ;;
   965 ;; *************** function _main *****************
   966 ;; Defined at:
   967 ;;		line 52 in file "mainseguridad.c"
   968 ;; Parameters:    Size  Location     Type
   969 ;;		None
   970 ;; Auto vars:     Size  Location     Type
   971 ;;		None
   972 ;; Return value:  Size  Location     Type
   973 ;;                  1    wreg      void 
   974 ;; Registers used:
   975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   976 ;; Tracked objects:
   977 ;;		On entry : B00/0
   978 ;;		On exit  : 0/0
   979 ;;		Unchanged: 0/0
   980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   981 ;;      Params:         0       0       0       0       0
   982 ;;      Locals:         0       0       0       0       0
   983 ;;      Temps:          0       0       0       0       0
   984 ;;      Totals:         0       0       0       0       0
   985 ;;Total ram usage:        0 bytes
   986 ;; Hardware stack levels required when called: 4
   987 ;; This function calls:
   988 ;;		_LCD_Init
   989 ;;		_function_alarma
   990 ;;		_function_bloqueado
   991 ;;		_function_monitoreo
   992 ;;		_function_seguridad
   993 ;;		_keypad_init
   994 ;; This function is called by:
   995 ;;		Startup code after reset
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999     0524                     _main:	
  1000                           ;psect for function _main
  1001                           
  1002     0524                     l1732:	
  1003                           ;incstack = 0
  1004                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1005                           
  1006                           
  1007                           ;mainseguridad.c: 54:     TRISE = 0;
  1008     0524  1683               	bsf	3,5	;RP0=1, select bank1
  1009     0525  1303               	bcf	3,6	;RP1=0, select bank1
  1010     0526  0189               	clrf	9	;volatile
  1011                           
  1012                           ;mainseguridad.c: 55:     PORTE = 0x00;
  1013     0527  1283               	bcf	3,5	;RP0=0, select bank0
  1014     0528  1303               	bcf	3,6	;RP1=0, select bank0
  1015     0529  0189               	clrf	9	;volatile
  1016     052A                     l1734:
  1017                           
  1018                           ;mainseguridad.c: 57:     OSCCON = 0x71;
  1019     052A  3071               	movlw	113
  1020     052B  1683               	bsf	3,5	;RP0=1, select bank1
  1021     052C  1303               	bcf	3,6	;RP1=0, select bank1
  1022     052D  008F               	movwf	15	;volatile
  1023     052E                     l1736:
  1024                           
  1025                           ;mainseguridad.c: 59:     LCD_Init();
  1026     052E  120A  118A  2385  120A  118A  	fcall	_LCD_Init
  1027     0533                     l1738:
  1028                           
  1029                           ;mainseguridad.c: 61:     keypad_init();
  1030     0533  120A  118A  2295  120A  118A  	fcall	_keypad_init
  1031     0538                     l1740:
  1032                           
  1033                           ;mainseguridad.c: 62:     TRISC = 0x07;
  1034     0538  3007               	movlw	7
  1035     0539  1683               	bsf	3,5	;RP0=1, select bank1
  1036     053A  1303               	bcf	3,6	;RP1=0, select bank1
  1037     053B  0087               	movwf	7	;volatile
  1038     053C                     l1742:
  1039                           
  1040                           ;mainseguridad.c: 65:     var_sensor_ir = RC1;
  1041     053C  3000               	movlw	0
  1042     053D  1283               	bcf	3,5	;RP0=0, select bank0
  1043     053E  1303               	bcf	3,6	;RP1=0, select bank0
  1044     053F  1887               	btfsc	7,1	;volatile
  1045     0540  3001               	movlw	1
  1046     0541  00A3               	movwf	_var_sensor_ir
  1047     0542                     l1744:
  1048                           
  1049                           ;mainseguridad.c: 66:     var_sensor_hall = RC0;
  1050     0542  3000               	movlw	0
  1051     0543  1807               	btfsc	7,0	;volatile
  1052     0544  3001               	movlw	1
  1053     0545  00A2               	movwf	_var_sensor_hall
  1054     0546                     l1746:
  1055                           
  1056                           ;mainseguridad.c: 67:     var_sensor_metal = RC2;
  1057     0546  3000               	movlw	0
  1058     0547  1907               	btfsc	7,2	;volatile
  1059     0548  3001               	movlw	1
  1060     0549  00A1               	movwf	_var_sensor_metal
  1061     054A                     l1748:
  1062                           
  1063                           ;mainseguridad.c: 69:     estado = seguridad;
  1064     054A  01A5               	clrf	_estado
  1065     054B                     l1750:
  1066                           
  1067                           ;mainseguridad.c: 72:         if (estado == seguridad){
  1068     054B  1283               	bcf	3,5	;RP0=0, select bank0
  1069     054C  1303               	bcf	3,6	;RP1=0, select bank0
  1070     054D  0825               	movf	_estado,w
  1071     054E  1D03               	btfss	3,2
  1072     054F  2D51               	goto	u1191
  1073     0550  2D52               	goto	u1190
  1074     0551                     u1191:
  1075     0551  2D58               	goto	l1754
  1076     0552                     u1190:
  1077     0552                     l1752:
  1078                           
  1079                           ;mainseguridad.c: 73:             function_seguridad();
  1080     0552  120A  118A  257F  120A  118A  	fcall	_function_seguridad
  1081                           
  1082                           ;mainseguridad.c: 74:         }
  1083     0557  2D4B               	goto	l1750
  1084     0558                     l1754:
  1085     0558  0325               	decf	_estado,w
  1086     0559  1D03               	btfss	3,2
  1087     055A  2D5C               	goto	u1201
  1088     055B  2D5D               	goto	u1200
  1089     055C                     u1201:
  1090     055C  2D63               	goto	l1758
  1091     055D                     u1200:
  1092     055D                     l1756:
  1093                           
  1094                           ;mainseguridad.c: 76:             function_monitoreo();
  1095     055D  120A  118A  2499  120A  118A  	fcall	_function_monitoreo
  1096                           
  1097                           ;mainseguridad.c: 77:         }
  1098     0562  2D4B               	goto	l1750
  1099     0563                     l1758:
  1100     0563  3002               	movlw	2
  1101     0564  0625               	xorwf	_estado,w
  1102     0565  1D03               	btfss	3,2
  1103     0566  2D68               	goto	u1211
  1104     0567  2D69               	goto	u1210
  1105     0568                     u1211:
  1106     0568  2D6F               	goto	l1762
  1107     0569                     u1210:
  1108     0569                     l1760:
  1109                           
  1110                           ;mainseguridad.c: 79:             function_bloqueado();
  1111     0569  120A  118A  22EE  120A  118A  	fcall	_function_bloqueado
  1112                           
  1113                           ;mainseguridad.c: 80:         }
  1114     056E  2D4B               	goto	l1750
  1115     056F                     l1762:
  1116     056F  3003               	movlw	3
  1117     0570  0625               	xorwf	_estado,w
  1118     0571  1D03               	btfss	3,2
  1119     0572  2D74               	goto	u1221
  1120     0573  2D75               	goto	u1220
  1121     0574                     u1221:
  1122     0574  2D7B               	goto	l178
  1123     0575                     u1220:
  1124     0575                     l1764:
  1125                           
  1126                           ;mainseguridad.c: 82:             function_alarma();
  1127     0575  120A  118A  235F  120A  118A  	fcall	_function_alarma
  1128     057A  2D4B               	goto	l1750
  1129     057B                     l178:
  1130     057B  2D4B               	goto	l1750
  1131     057C  120A  118A  2800   	ljmp	start
  1132     057F                     __end_of_main:
  1133                           
  1134                           	psect	text1
  1135     0295                     __ptext1:	
  1136 ;; *************** function _keypad_init *****************
  1137 ;; Defined at:
  1138 ;;		line 33 in file "keypad.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;		None
  1141 ;; Auto vars:     Size  Location     Type
  1142 ;;		None
  1143 ;; Return value:  Size  Location     Type
  1144 ;;                  1    wreg      void 
  1145 ;; Registers used:
  1146 ;;		wreg, status,2, status,0, btemp+1
  1147 ;; Tracked objects:
  1148 ;;		On entry : 0/0
  1149 ;;		On exit  : 0/0
  1150 ;;		Unchanged: 0/0
  1151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1152 ;;      Params:         0       0       0       0       0
  1153 ;;      Locals:         0       0       0       0       0
  1154 ;;      Temps:          0       0       0       0       0
  1155 ;;      Totals:         0       0       0       0       0
  1156 ;;Total ram usage:        0 bytes
  1157 ;; Hardware stack levels used: 1
  1158 ;; This function calls:
  1159 ;;		Nothing
  1160 ;; This function is called by:
  1161 ;;		_main
  1162 ;; This function uses a non-reentrant model
  1163 ;;
  1164                           
  1165     0295                     _keypad_init:	
  1166                           ;psect for function _keypad_init
  1167                           
  1168     0295                     l1650:	
  1169                           ;incstack = 0
  1170                           ; Regs used in _keypad_init: [wreg+status,2+status,0+btemp+1]
  1171                           
  1172                           
  1173                           ;keypad.c: 35:     TRISB &= ~(1<<0) & ~(1<<1) & ~(1<<2) & ~(1<<3);
  1174     0295  30F0               	movlw	240
  1175     0296  00FF               	movwf	btemp+1
  1176     0297  087F               	movf	btemp+1,w
  1177     0298  1683               	bsf	3,5	;RP0=1, select bank1
  1178     0299  1303               	bcf	3,6	;RP1=0, select bank1
  1179     029A  0586               	andwf	6,f	;volatile
  1180                           
  1181                           ;keypad.c: 36:     TRISB |= (1<<4) | (1<<5) | (1<<6) | (1<<7);
  1182     029B  30F0               	movlw	240
  1183     029C  00FF               	movwf	btemp+1
  1184     029D  087F               	movf	btemp+1,w
  1185     029E  0486               	iorwf	6,f	;volatile
  1186     029F                     l1652:
  1187                           
  1188                           ;keypad.c: 37:     OPTION_REGbits.nRBPU = 0;
  1189     029F  1381               	bcf	1,7	;volatile
  1190     02A0                     l1654:
  1191                           
  1192                           ;keypad.c: 38:     ANSELH = 0;
  1193     02A0  1683               	bsf	3,5	;RP0=1, select bank3
  1194     02A1  1703               	bsf	3,6	;RP1=1, select bank3
  1195     02A2  0189               	clrf	9	;volatile
  1196     02A3                     l50:
  1197     02A3  0008               	return
  1198     02A4                     __end_of_keypad_init:
  1199                           
  1200                           	psect	text2
  1201     057F                     __ptext2:	
  1202 ;; *************** function _function_seguridad *****************
  1203 ;; Defined at:
  1204 ;;		line 100 in file "mainseguridad.c"
  1205 ;; Parameters:    Size  Location     Type
  1206 ;;		None
  1207 ;; Auto vars:     Size  Location     Type
  1208 ;;  key             1   13[COMMON] unsigned char 
  1209 ;; Return value:  Size  Location     Type
  1210 ;;                  1    wreg      void 
  1211 ;; Registers used:
  1212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1213 ;; Tracked objects:
  1214 ;;		On entry : 0/0
  1215 ;;		On exit  : 0/0
  1216 ;;		Unchanged: 0/0
  1217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1218 ;;      Params:         0       0       0       0       0
  1219 ;;      Locals:         1       0       0       0       0
  1220 ;;      Temps:          3       0       0       0       0
  1221 ;;      Totals:         4       0       0       0       0
  1222 ;;Total ram usage:        4 bytes
  1223 ;; Hardware stack levels used: 1
  1224 ;; Hardware stack levels required when called: 3
  1225 ;; This function calls:
  1226 ;;		_LCD_Char
  1227 ;;		_LCD_Clear
  1228 ;;		_LCD_Command
  1229 ;;		_LCD_String_xy
  1230 ;;		_keypad_getkey
  1231 ;;		_strncmp
  1232 ;; This function is called by:
  1233 ;;		_main
  1234 ;; This function uses a non-reentrant model
  1235 ;;
  1236                           
  1237     057F                     _function_seguridad:	
  1238                           ;psect for function _function_seguridad
  1239                           
  1240     057F                     l1656:	
  1241                           ;incstack = 0
  1242                           ; Regs used in _function_seguridad: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1243                           
  1244     057F                     l1658:
  1245                           
  1246                           ;mainseguridad.c: 102:     LCD_Clear();
  1247     057F  120A  118A  22A4  120A  118A  	fcall	_LCD_Clear
  1248     0584                     l1660:
  1249                           
  1250                           ;mainseguridad.c: 103:         LCD_String_xy(0,0,"Press a Key");
  1251     0584  01F5               	clrf	LCD_String_xy@pos
  1252     0585  3054               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1253     0586  00F6               	movwf	LCD_String_xy@msg
  1254     0587  3080               	movlw	128
  1255     0588  00F7               	movwf	LCD_String_xy@msg+1
  1256     0589  3000               	movlw	0
  1257     058A  120A  118A  2339  120A  118A  	fcall	_LCD_String_xy
  1258     058F                     l1662:
  1259                           
  1260                           ;mainseguridad.c: 104:         LCD_Command(0xC0);
  1261     058F  30C0               	movlw	192
  1262     0590  120A  118A  23AF  120A  118A  	fcall	_LCD_Command
  1263     0595                     l1664:
  1264                           
  1265                           ;mainseguridad.c: 106:             key = keypad_getkey();
  1266     0595  120A  118A  2613  120A  118A  	fcall	_keypad_getkey
  1267     059A  00FD               	movwf	function_seguridad@key
  1268     059B                     l1666:
  1269                           
  1270                           ;mainseguridad.c: 107:             if(key != 0){
  1271     059B  087D               	movf	function_seguridad@key,w
  1272     059C  1903               	btfsc	3,2
  1273     059D  2D9F               	goto	u1141
  1274     059E  2DA0               	goto	u1140
  1275     059F                     u1141:
  1276     059F  2DB2               	goto	l1674
  1277     05A0                     u1140:
  1278     05A0                     l1668:
  1279                           
  1280                           ;mainseguridad.c: 109:                 LCD_Char(key);
  1281     05A0  087D               	movf	function_seguridad@key,w
  1282     05A1  120A  118A  23E5  120A  118A  	fcall	_LCD_Char
  1283     05A6                     l1670:
  1284                           
  1285                           ;mainseguridad.c: 110:                 pass_user[idx++] = key;
  1286     05A6  1283               	bcf	3,5	;RP0=0, select bank0
  1287     05A7  1303               	bcf	3,6	;RP1=0, select bank0
  1288     05A8  0824               	movf	_idx,w
  1289     05A9  3E37               	addlw	(low (_pass_user| 0))& (0+255)
  1290     05AA  0084               	movwf	4
  1291     05AB  087D               	movf	function_seguridad@key,w
  1292     05AC  1383               	bcf	3,7	;select IRP bank0
  1293     05AD  0080               	movwf	0
  1294     05AE                     l1672:
  1295     05AE  3001               	movlw	1
  1296     05AF  00FF               	movwf	btemp+1
  1297     05B0  087F               	movf	btemp+1,w
  1298     05B1  07A4               	addwf	_idx,f
  1299     05B2                     l1674:
  1300                           
  1301                           ;mainseguridad.c: 112:             _delay((unsigned long)((100)*(8000000/4000.0)));
  1302     05B2  3002               	movlw	2
  1303     05B3  00FC               	movwf	??_function_seguridad+2
  1304     05B4  3004               	movlw	4
  1305     05B5  00FB               	movwf	??_function_seguridad+1
  1306     05B6  30BA               	movlw	186
  1307     05B7  00FA               	movwf	??_function_seguridad
  1308     05B8                     u1237:
  1309     05B8  0BFA               	decfsz	??_function_seguridad,f
  1310     05B9  2DB8               	goto	u1237
  1311     05BA  0BFB               	decfsz	??_function_seguridad+1,f
  1312     05BB  2DB8               	goto	u1237
  1313     05BC  0BFC               	decfsz	??_function_seguridad+2,f
  1314     05BD  2DB8               	goto	u1237
  1315     05BE  0000               	nop
  1316     05BF                     l1676:
  1317                           
  1318                           ;mainseguridad.c: 113:         }while(idx < 5);
  1319     05BF  3005               	movlw	5
  1320     05C0  1283               	bcf	3,5	;RP0=0, select bank0
  1321     05C1  1303               	bcf	3,6	;RP1=0, select bank0
  1322     05C2  0224               	subwf	_idx,w
  1323     05C3  1C03               	skipc
  1324     05C4  2DC6               	goto	u1151
  1325     05C5  2DC7               	goto	u1150
  1326     05C6                     u1151:
  1327     05C6  2D95               	goto	l1664
  1328     05C7                     u1150:
  1329     05C7                     l1678:
  1330                           
  1331                           ;mainseguridad.c: 115:         if(strncmp(pass_user,password,4)==0){
  1332     05C7  300B               	movlw	(low ((_password-__stringbase)| (0+32768)))& (0+255)
  1333     05C8  00F0               	movwf	strncmp@s2
  1334     05C9  3004               	movlw	4
  1335     05CA  00F1               	movwf	strncmp@len
  1336     05CB  3000               	movlw	0
  1337     05CC  00F2               	movwf	strncmp@len+1
  1338     05CD  3037               	movlw	(low (_pass_user| 0))& (0+255)
  1339     05CE  120A  118A  24DE  120A  118A  	fcall	_strncmp
  1340     05D3  0870               	movf	?_strncmp,w
  1341     05D4  0471               	iorwf	?_strncmp+1,w
  1342     05D5  1D03               	btfss	3,2
  1343     05D6  2DD8               	goto	u1161
  1344     05D7  2DD9               	goto	u1160
  1345     05D8                     u1161:
  1346     05D8  2DF1               	goto	l1690
  1347     05D9                     u1160:
  1348     05D9                     l1680:
  1349                           
  1350                           ;mainseguridad.c: 116:             LCD_Clear();
  1351     05D9  120A  118A  22A4  120A  118A  	fcall	_LCD_Clear
  1352     05DE                     l1682:
  1353                           
  1354                           ;mainseguridad.c: 117:             LCD_String_xy(0,0,"Clave Correcta");
  1355     05DE  01F5               	clrf	LCD_String_xy@pos
  1356     05DF  3045               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1357     05E0  00F6               	movwf	LCD_String_xy@msg
  1358     05E1  3080               	movlw	128
  1359     05E2  00F7               	movwf	LCD_String_xy@msg+1
  1360     05E3  3000               	movlw	0
  1361     05E4  120A  118A  2339  120A  118A  	fcall	_LCD_String_xy
  1362     05E9                     l1684:
  1363                           
  1364                           ;mainseguridad.c: 118:             estado = monitoreo;
  1365     05E9  1283               	bcf	3,5	;RP0=0, select bank0
  1366     05EA  1303               	bcf	3,6	;RP1=0, select bank0
  1367     05EB  01A5               	clrf	_estado
  1368     05EC  0AA5               	incf	_estado,f
  1369     05ED                     l1686:
  1370                           
  1371                           ;mainseguridad.c: 119:             idx = 0;
  1372     05ED  01A4               	clrf	_idx
  1373     05EE                     l1688:
  1374                           
  1375                           ;mainseguridad.c: 120:             PORTE = 0x02;
  1376     05EE  3002               	movlw	2
  1377     05EF  0089               	movwf	9	;volatile
  1378                           
  1379                           ;mainseguridad.c: 121:         }
  1380     05F0  2E09               	goto	l1698
  1381     05F1                     l1690:
  1382                           
  1383                           ;mainseguridad.c: 123:             LCD_Clear();
  1384     05F1  120A  118A  22A4  120A  118A  	fcall	_LCD_Clear
  1385     05F6                     l1692:
  1386                           
  1387                           ;mainseguridad.c: 124:             LCD_String_xy(0,0,"Clave Incorrecta");
  1388     05F6  01F5               	clrf	LCD_String_xy@pos
  1389     05F7  3034               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1390     05F8  00F6               	movwf	LCD_String_xy@msg
  1391     05F9  3080               	movlw	128
  1392     05FA  00F7               	movwf	LCD_String_xy@msg+1
  1393     05FB  3000               	movlw	0
  1394     05FC  120A  118A  2339  120A  118A  	fcall	_LCD_String_xy
  1395     0601                     l1694:
  1396                           
  1397                           ;mainseguridad.c: 125:             intentos++;
  1398     0601  3001               	movlw	1
  1399     0602  00FF               	movwf	btemp+1
  1400     0603  087F               	movf	btemp+1,w
  1401     0604  1283               	bcf	3,5	;RP0=0, select bank0
  1402     0605  1303               	bcf	3,6	;RP1=0, select bank0
  1403     0606  07A0               	addwf	_intentos,f
  1404     0607                     l1696:
  1405                           
  1406                           ;mainseguridad.c: 126:             PORTE = 0x01;
  1407     0607  3001               	movlw	1
  1408     0608  0089               	movwf	9	;volatile
  1409     0609                     l1698:
  1410                           
  1411                           ;mainseguridad.c: 128:         if (intentos>3){
  1412     0609  3004               	movlw	4
  1413     060A  0220               	subwf	_intentos,w
  1414     060B  1C03               	skipc
  1415     060C  2E0E               	goto	u1171
  1416     060D  2E0F               	goto	u1170
  1417     060E                     u1171:
  1418     060E  2E12               	goto	l199
  1419     060F                     u1170:
  1420     060F                     l1700:
  1421                           
  1422                           ;mainseguridad.c: 129:             idx = 0;
  1423     060F  01A4               	clrf	_idx
  1424     0610                     l1702:
  1425                           
  1426                           ;mainseguridad.c: 130:             estado=bloqueado;
  1427     0610  3002               	movlw	2
  1428     0611  00A5               	movwf	_estado
  1429     0612                     l199:
  1430     0612  0008               	return
  1431     0613                     __end_of_function_seguridad:
  1432                           
  1433                           	psect	text3
  1434     04DE                     __ptext3:	
  1435 ;; *************** function _strncmp *****************
  1436 ;; Defined at:
  1437 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\strncmp.c"
  1438 ;; Parameters:    Size  Location     Type
  1439 ;;  s1              1    wreg     PTR const unsigned char 
  1440 ;;		 -> pass_user(5), 
  1441 ;;  s2              1    0[COMMON] PTR const unsigned char 
  1442 ;;		 -> password(5), 
  1443 ;;  len             2    1[COMMON] unsigned int 
  1444 ;; Auto vars:     Size  Location     Type
  1445 ;;  s1              1    5[COMMON] PTR const unsigned char 
  1446 ;;		 -> pass_user(5), 
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  2    0[COMMON] int 
  1449 ;; Registers used:
  1450 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         3       0       0       0       0
  1457 ;;      Locals:         1       0       0       0       0
  1458 ;;      Temps:          2       0       0       0       0
  1459 ;;      Totals:         6       0       0       0       0
  1460 ;;Total ram usage:        6 bytes
  1461 ;; Hardware stack levels used: 2
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_function_seguridad
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469     04DE                     _strncmp:	
  1470                           ;psect for function _strncmp
  1471                           
  1472                           
  1473                           ;incstack = 0
  1474                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+btemp+1+pclath]
  1475                           ;strncmp@s1 stored from wreg
  1476     04DE  00F5               	movwf	strncmp@s1
  1477     04DF                     l1618:
  1478     04DF  2D13               	goto	l1630
  1479     04E0                     l1620:
  1480     04E0  0875               	movf	strncmp@s1,w
  1481     04E1  0084               	movwf	4
  1482     04E2  1383               	bcf	3,7	;select IRP bank0
  1483     04E3  0800               	movf	0,w
  1484     04E4  1903               	btfsc	3,2
  1485     04E5  2CE7               	goto	u1111
  1486     04E6  2CE8               	goto	u1110
  1487     04E7                     u1111:
  1488     04E7  2CF8               	goto	l1624
  1489     04E8                     u1110:
  1490     04E8                     l1622:
  1491     04E8  0870               	movf	strncmp@s2,w
  1492     04E9  0084               	movwf	4
  1493     04EA  120A  118A  200D  120A  118A  	fcall	stringdir
  1494     04EF  00F3               	movwf	??_strncmp
  1495     04F0  0875               	movf	strncmp@s1,w
  1496     04F1  0084               	movwf	4
  1497     04F2  0800               	movf	0,w
  1498     04F3  0673               	xorwf	??_strncmp,w
  1499     04F4  1903               	skipnz
  1500     04F5  2CF7               	goto	u1121
  1501     04F6  2CF8               	goto	u1120
  1502     04F7                     u1121:
  1503     04F7  2D0B               	goto	l1628
  1504     04F8                     u1120:
  1505     04F8                     l1624:
  1506     04F8  0870               	movf	strncmp@s2,w
  1507     04F9  0084               	movwf	4
  1508     04FA  120A  118A  200D  120A  118A  	fcall	stringdir
  1509     04FF  00F3               	movwf	??_strncmp
  1510     0500  0875               	movf	strncmp@s1,w
  1511     0501  0084               	movwf	4
  1512     0502  0800               	movf	0,w
  1513     0503  00F4               	movwf	??_strncmp+1
  1514     0504  0873               	movf	??_strncmp,w
  1515     0505  0274               	subwf	??_strncmp+1,w
  1516     0506  00F0               	movwf	?_strncmp
  1517     0507  01F1               	clrf	?_strncmp+1
  1518     0508  1C03               	skipc
  1519     0509  03F1               	decf	?_strncmp+1,f
  1520     050A  2D23               	goto	l787
  1521     050B                     l1628:
  1522     050B  3001               	movlw	1
  1523     050C  00FF               	movwf	btemp+1
  1524     050D  087F               	movf	btemp+1,w
  1525     050E  07F5               	addwf	strncmp@s1,f
  1526     050F  3001               	movlw	1
  1527     0510  00FF               	movwf	btemp+1
  1528     0511  087F               	movf	btemp+1,w
  1529     0512  07F0               	addwf	strncmp@s2,f
  1530     0513                     l1630:
  1531     0513  3001               	movlw	1
  1532     0514  02F1               	subwf	strncmp@len,f
  1533     0515  3000               	movlw	0
  1534     0516  1C03               	skipc
  1535     0517  03F2               	decf	strncmp@len+1,f
  1536     0518  02F2               	subwf	strncmp@len+1,f
  1537     0519  0A71               	incf	strncmp@len,w
  1538     051A  1D03               	skipz
  1539     051B  2D20               	goto	u1131
  1540     051C  0A72               	incf	strncmp@len+1,w
  1541     051D  1D03               	btfss	3,2
  1542     051E  2D20               	goto	u1131
  1543     051F  2D21               	goto	u1130
  1544     0520                     u1131:
  1545     0520  2CE0               	goto	l1620
  1546     0521                     u1130:
  1547     0521                     l1632:
  1548     0521  01F0               	clrf	?_strncmp
  1549     0522  01F1               	clrf	?_strncmp+1
  1550     0523                     l787:
  1551     0523  0008               	return
  1552     0524                     __end_of_strncmp:
  1553                           
  1554                           	psect	text4
  1555     0613                     __ptext4:	
  1556 ;; *************** function _keypad_getkey *****************
  1557 ;; Defined at:
  1558 ;;		line 53 in file "keypad.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  letras         16    0[BANK0 ] unsigned char [4][4]
  1563 ;;  i               2   17[BANK0 ] int 
  1564 ;;  valor           1   16[BANK0 ] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  1    wreg      unsigned char 
  1567 ;; Registers used:
  1568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1574 ;;      Params:         0       0       0       0       0
  1575 ;;      Locals:         0      19       0       0       0
  1576 ;;      Temps:          4       0       0       0       0
  1577 ;;      Totals:         4      19       0       0       0
  1578 ;;Total ram usage:       23 bytes
  1579 ;; Hardware stack levels used: 1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_function_seguridad
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587     0613                     _keypad_getkey:	
  1588                           ;psect for function _keypad_getkey
  1589                           
  1590     0613                     l1430:	
  1591                           ;incstack = 0
  1592                           ; Regs used in _keypad_getkey: [wreg-fsr0h+status,2+status,0+btemp+1]
  1593                           
  1594                           
  1595                           ;keypad.c: 55: char letras[4][4]={ {'1','2','3','A'},
  1596     0613  303C               	movlw	keypad_getkey@letras& (0+255)
  1597     0614  0084               	movwf	4
  1598     0615  3055               	movlw	low keypad_getkey@F1268
  1599     0616  00F0               	movwf	??_keypad_getkey
  1600     0617  0804               	movf	4,w
  1601     0618  00F1               	movwf	??_keypad_getkey+1
  1602     0619  3010               	movlw	16
  1603     061A  00F2               	movwf	??_keypad_getkey+2
  1604     061B                     u790:
  1605     061B  0870               	movf	??_keypad_getkey,w
  1606     061C  0084               	movwf	4
  1607     061D  1383               	bcf	3,7	;select IRP bank0
  1608     061E  0800               	movf	0,w
  1609     061F  00F3               	movwf	??_keypad_getkey+3
  1610     0620  0AF0               	incf	??_keypad_getkey,f
  1611     0621  0871               	movf	??_keypad_getkey+1,w
  1612     0622  0084               	movwf	4
  1613     0623  0873               	movf	??_keypad_getkey+3,w
  1614     0624  0080               	movwf	0
  1615     0625  0AF1               	incf	??_keypad_getkey+1,f
  1616     0626  0BF2               	decfsz	??_keypad_getkey+2,f
  1617     0627  2E1B               	goto	u790
  1618     0628                     l1432:
  1619     0628                     l1434:
  1620                           
  1621                           ;keypad.c: 60: char valor=0;
  1622     0628  1283               	bcf	3,5	;RP0=0, select bank0
  1623     0629  1303               	bcf	3,6	;RP1=0, select bank0
  1624     062A  01CC               	clrf	keypad_getkey@valor
  1625     062B                     l1436:
  1626                           
  1627                           ;keypad.c: 62: for(i=0;i<4;i++){
  1628     062B  01CD               	clrf	keypad_getkey@i
  1629     062C  01CE               	clrf	keypad_getkey@i+1
  1630     062D                     l1442:
  1631                           
  1632                           ;keypad.c: 64:    if(i==0){
  1633     062D  1283               	bcf	3,5	;RP0=0, select bank0
  1634     062E  1303               	bcf	3,6	;RP1=0, select bank0
  1635     062F  084D               	movf	keypad_getkey@i,w
  1636     0630  044E               	iorwf	keypad_getkey@i+1,w
  1637     0631  1D03               	btfss	3,2
  1638     0632  2E34               	goto	u801
  1639     0633  2E35               	goto	u800
  1640     0634                     u801:
  1641     0634  2E5A               	goto	l1462
  1642     0635                     u800:
  1643     0635                     l1444:
  1644                           
  1645                           ;keypad.c: 66:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(1<<1)|(0<<0);
  1646     0635  30FE               	movlw	254
  1647     0636  0086               	movwf	6	;volatile
  1648                           
  1649                           ;keypad.c: 67:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1650     0637  3042               	movlw	66
  1651     0638  00F0               	movwf	??_keypad_getkey
  1652     0639                     u1247:
  1653     0639  0BF0               	decfsz	??_keypad_getkey,f
  1654     063A  2E39               	goto	u1247
  1655     063B  0000               	nop
  1656                           
  1657                           ;keypad.c: 68:       while (!(PORTB & (1<<4))){valor=letras[0][0];}
  1658     063C  2E3F               	goto	l1448
  1659     063D                     l1446:
  1660     063D  083C               	movf	keypad_getkey@letras,w
  1661     063E  00CC               	movwf	keypad_getkey@valor
  1662     063F                     l1448:
  1663     063F  1283               	bcf	3,5	;RP0=0, select bank0
  1664     0640  1303               	bcf	3,6	;RP1=0, select bank0
  1665     0641  1E06               	btfss	6,4	;volatile
  1666     0642  2E44               	goto	u811
  1667     0643  2E45               	goto	u810
  1668     0644                     u811:
  1669     0644  2E3D               	goto	l1446
  1670     0645                     u810:
  1671     0645  2E48               	goto	l1452
  1672     0646                     l1450:
  1673     0646  083D               	movf	keypad_getkey@letras+1,w
  1674     0647  00CC               	movwf	keypad_getkey@valor
  1675     0648                     l1452:
  1676     0648  1E86               	btfss	6,5	;volatile
  1677     0649  2E4B               	goto	u821
  1678     064A  2E4C               	goto	u820
  1679     064B                     u821:
  1680     064B  2E46               	goto	l1450
  1681     064C                     u820:
  1682     064C  2E4F               	goto	l1456
  1683     064D                     l1454:
  1684     064D  083E               	movf	keypad_getkey@letras+2,w
  1685     064E  00CC               	movwf	keypad_getkey@valor
  1686     064F                     l1456:
  1687     064F  1F06               	btfss	6,6	;volatile
  1688     0650  2E52               	goto	u831
  1689     0651  2E53               	goto	u830
  1690     0652                     u831:
  1691     0652  2E4D               	goto	l1454
  1692     0653                     u830:
  1693     0653  2E56               	goto	l1460
  1694     0654                     l1458:
  1695     0654  083F               	movf	keypad_getkey@letras+3,w
  1696     0655  00CC               	movwf	keypad_getkey@valor
  1697     0656                     l1460:
  1698     0656  1F86               	btfss	6,7	;volatile
  1699     0657  2E59               	goto	u841
  1700     0658  2E5A               	goto	u840
  1701     0659                     u841:
  1702     0659  2E54               	goto	l1458
  1703     065A                     u840:
  1704     065A                     l1462:
  1705                           
  1706                           ;keypad.c: 74:    if(i==1){
  1707     065A  034D               	decf	keypad_getkey@i,w
  1708     065B  044E               	iorwf	keypad_getkey@i+1,w
  1709     065C  1D03               	btfss	3,2
  1710     065D  2E5F               	goto	u851
  1711     065E  2E60               	goto	u850
  1712     065F                     u851:
  1713     065F  2E85               	goto	l1482
  1714     0660                     u850:
  1715     0660                     l1464:
  1716                           
  1717                           ;keypad.c: 75:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(1<<2)|(0<<1)|(1<<0);
  1718     0660  30FD               	movlw	253
  1719     0661  0086               	movwf	6	;volatile
  1720                           
  1721                           ;keypad.c: 76:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1722     0662  3042               	movlw	66
  1723     0663  00F0               	movwf	??_keypad_getkey
  1724     0664                     u1257:
  1725     0664  0BF0               	decfsz	??_keypad_getkey,f
  1726     0665  2E64               	goto	u1257
  1727     0666  0000               	nop
  1728                           
  1729                           ;keypad.c: 77:       while (!(PORTB & (1<<4))){valor=letras[1][0];}
  1730     0667  2E6A               	goto	l1468
  1731     0668                     l1466:
  1732     0668  0840               	movf	keypad_getkey@letras+4,w
  1733     0669  00CC               	movwf	keypad_getkey@valor
  1734     066A                     l1468:
  1735     066A  1283               	bcf	3,5	;RP0=0, select bank0
  1736     066B  1303               	bcf	3,6	;RP1=0, select bank0
  1737     066C  1E06               	btfss	6,4	;volatile
  1738     066D  2E6F               	goto	u861
  1739     066E  2E70               	goto	u860
  1740     066F                     u861:
  1741     066F  2E68               	goto	l1466
  1742     0670                     u860:
  1743     0670  2E73               	goto	l1472
  1744     0671                     l1470:
  1745     0671  0841               	movf	keypad_getkey@letras+5,w
  1746     0672  00CC               	movwf	keypad_getkey@valor
  1747     0673                     l1472:
  1748     0673  1E86               	btfss	6,5	;volatile
  1749     0674  2E76               	goto	u871
  1750     0675  2E77               	goto	u870
  1751     0676                     u871:
  1752     0676  2E71               	goto	l1470
  1753     0677                     u870:
  1754     0677  2E7A               	goto	l1476
  1755     0678                     l1474:
  1756     0678  0842               	movf	keypad_getkey@letras+6,w
  1757     0679  00CC               	movwf	keypad_getkey@valor
  1758     067A                     l1476:
  1759     067A  1F06               	btfss	6,6	;volatile
  1760     067B  2E7D               	goto	u881
  1761     067C  2E7E               	goto	u880
  1762     067D                     u881:
  1763     067D  2E78               	goto	l1474
  1764     067E                     u880:
  1765     067E  2E81               	goto	l1480
  1766     067F                     l1478:
  1767     067F  0843               	movf	keypad_getkey@letras+7,w
  1768     0680  00CC               	movwf	keypad_getkey@valor
  1769     0681                     l1480:
  1770     0681  1F86               	btfss	6,7	;volatile
  1771     0682  2E84               	goto	u891
  1772     0683  2E85               	goto	u890
  1773     0684                     u891:
  1774     0684  2E7F               	goto	l1478
  1775     0685                     u890:
  1776     0685                     l1482:
  1777                           
  1778                           ;keypad.c: 83:    if(i==2){
  1779     0685  3002               	movlw	2
  1780     0686  064D               	xorwf	keypad_getkey@i,w
  1781     0687  044E               	iorwf	keypad_getkey@i+1,w
  1782     0688  1D03               	btfss	3,2
  1783     0689  2E8B               	goto	u901
  1784     068A  2E8C               	goto	u900
  1785     068B                     u901:
  1786     068B  2EB1               	goto	l1502
  1787     068C                     u900:
  1788     068C                     l1484:
  1789                           
  1790                           ;keypad.c: 84:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(1<<3)|(0<<2)|(1<<1)|(1<<0);
  1791     068C  30FB               	movlw	251
  1792     068D  0086               	movwf	6	;volatile
  1793                           
  1794                           ;keypad.c: 85:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1795     068E  3042               	movlw	66
  1796     068F  00F0               	movwf	??_keypad_getkey
  1797     0690                     u1267:
  1798     0690  0BF0               	decfsz	??_keypad_getkey,f
  1799     0691  2E90               	goto	u1267
  1800     0692  0000               	nop
  1801                           
  1802                           ;keypad.c: 86:       while (!(PORTB & (1<<4))){valor=letras[2][0];}
  1803     0693  2E96               	goto	l1488
  1804     0694                     l1486:
  1805     0694  0844               	movf	keypad_getkey@letras+8,w
  1806     0695  00CC               	movwf	keypad_getkey@valor
  1807     0696                     l1488:
  1808     0696  1283               	bcf	3,5	;RP0=0, select bank0
  1809     0697  1303               	bcf	3,6	;RP1=0, select bank0
  1810     0698  1E06               	btfss	6,4	;volatile
  1811     0699  2E9B               	goto	u911
  1812     069A  2E9C               	goto	u910
  1813     069B                     u911:
  1814     069B  2E94               	goto	l1486
  1815     069C                     u910:
  1816     069C  2E9F               	goto	l1492
  1817     069D                     l1490:
  1818     069D  0845               	movf	keypad_getkey@letras+9,w
  1819     069E  00CC               	movwf	keypad_getkey@valor
  1820     069F                     l1492:
  1821     069F  1E86               	btfss	6,5	;volatile
  1822     06A0  2EA2               	goto	u921
  1823     06A1  2EA3               	goto	u920
  1824     06A2                     u921:
  1825     06A2  2E9D               	goto	l1490
  1826     06A3                     u920:
  1827     06A3  2EA6               	goto	l1496
  1828     06A4                     l1494:
  1829     06A4  0846               	movf	keypad_getkey@letras+10,w
  1830     06A5  00CC               	movwf	keypad_getkey@valor
  1831     06A6                     l1496:
  1832     06A6  1F06               	btfss	6,6	;volatile
  1833     06A7  2EA9               	goto	u931
  1834     06A8  2EAA               	goto	u930
  1835     06A9                     u931:
  1836     06A9  2EA4               	goto	l1494
  1837     06AA                     u930:
  1838     06AA  2EAD               	goto	l1500
  1839     06AB                     l1498:
  1840     06AB  0847               	movf	keypad_getkey@letras+11,w
  1841     06AC  00CC               	movwf	keypad_getkey@valor
  1842     06AD                     l1500:
  1843     06AD  1F86               	btfss	6,7	;volatile
  1844     06AE  2EB0               	goto	u941
  1845     06AF  2EB1               	goto	u940
  1846     06B0                     u941:
  1847     06B0  2EAB               	goto	l1498
  1848     06B1                     u940:
  1849     06B1                     l1502:
  1850                           
  1851                           ;keypad.c: 92:    if(i==3){
  1852     06B1  3003               	movlw	3
  1853     06B2  064D               	xorwf	keypad_getkey@i,w
  1854     06B3  044E               	iorwf	keypad_getkey@i+1,w
  1855     06B4  1D03               	btfss	3,2
  1856     06B5  2EB7               	goto	u951
  1857     06B6  2EB8               	goto	u950
  1858     06B7                     u951:
  1859     06B7  2EDD               	goto	l1522
  1860     06B8                     u950:
  1861     06B8                     l1504:
  1862                           
  1863                           ;keypad.c: 93:       PORTB = (1<<7)|(1<<6)|(1<<5)|(1<<4)|(0<<3)|(1<<2)|(1<<1)|(1<<0);
  1864     06B8  30F7               	movlw	247
  1865     06B9  0086               	movwf	6	;volatile
  1866                           
  1867                           ;keypad.c: 94:       _delay((unsigned long)((100)*(8000000/4000000.0)));
  1868     06BA  3042               	movlw	66
  1869     06BB  00F0               	movwf	??_keypad_getkey
  1870     06BC                     u1277:
  1871     06BC  0BF0               	decfsz	??_keypad_getkey,f
  1872     06BD  2EBC               	goto	u1277
  1873     06BE  0000               	nop
  1874                           
  1875                           ;keypad.c: 95:       while (!(PORTB & (1<<4))){valor=letras[3][0];}
  1876     06BF  2EC2               	goto	l1508
  1877     06C0                     l1506:
  1878     06C0  0848               	movf	keypad_getkey@letras+12,w
  1879     06C1  00CC               	movwf	keypad_getkey@valor
  1880     06C2                     l1508:
  1881     06C2  1283               	bcf	3,5	;RP0=0, select bank0
  1882     06C3  1303               	bcf	3,6	;RP1=0, select bank0
  1883     06C4  1E06               	btfss	6,4	;volatile
  1884     06C5  2EC7               	goto	u961
  1885     06C6  2EC8               	goto	u960
  1886     06C7                     u961:
  1887     06C7  2EC0               	goto	l1506
  1888     06C8                     u960:
  1889     06C8  2ECB               	goto	l1512
  1890     06C9                     l1510:
  1891     06C9  0849               	movf	keypad_getkey@letras+13,w
  1892     06CA  00CC               	movwf	keypad_getkey@valor
  1893     06CB                     l1512:
  1894     06CB  1E86               	btfss	6,5	;volatile
  1895     06CC  2ECE               	goto	u971
  1896     06CD  2ECF               	goto	u970
  1897     06CE                     u971:
  1898     06CE  2EC9               	goto	l1510
  1899     06CF                     u970:
  1900     06CF  2ED2               	goto	l1516
  1901     06D0                     l1514:
  1902     06D0  084A               	movf	keypad_getkey@letras+14,w
  1903     06D1  00CC               	movwf	keypad_getkey@valor
  1904     06D2                     l1516:
  1905     06D2  1F06               	btfss	6,6	;volatile
  1906     06D3  2ED5               	goto	u981
  1907     06D4  2ED6               	goto	u980
  1908     06D5                     u981:
  1909     06D5  2ED0               	goto	l1514
  1910     06D6                     u980:
  1911     06D6  2ED9               	goto	l1520
  1912     06D7                     l1518:
  1913     06D7  084B               	movf	keypad_getkey@letras+15,w
  1914     06D8  00CC               	movwf	keypad_getkey@valor
  1915     06D9                     l1520:
  1916     06D9  1F86               	btfss	6,7	;volatile
  1917     06DA  2EDC               	goto	u991
  1918     06DB  2EDD               	goto	u990
  1919     06DC                     u991:
  1920     06DC  2ED7               	goto	l1518
  1921     06DD                     u990:
  1922     06DD                     l1522:
  1923                           
  1924                           ;keypad.c: 100:    }
  1925     06DD  3001               	movlw	1
  1926     06DE  07CD               	addwf	keypad_getkey@i,f
  1927     06DF  1803               	skipnc
  1928     06E0  0ACE               	incf	keypad_getkey@i+1,f
  1929     06E1  3000               	movlw	0
  1930     06E2  07CE               	addwf	keypad_getkey@i+1,f
  1931     06E3                     l1524:
  1932     06E3  084E               	movf	keypad_getkey@i+1,w
  1933     06E4  3A80               	xorlw	128
  1934     06E5  00FF               	movwf	btemp+1
  1935     06E6  3080               	movlw	128
  1936     06E7  027F               	subwf	btemp+1,w
  1937     06E8  1D03               	skipz
  1938     06E9  2EEC               	goto	u1005
  1939     06EA  3004               	movlw	4
  1940     06EB  024D               	subwf	keypad_getkey@i,w
  1941     06EC                     u1005:
  1942     06EC  1C03               	skipc
  1943     06ED  2EEF               	goto	u1001
  1944     06EE  2EF0               	goto	u1000
  1945     06EF                     u1001:
  1946     06EF  2E2D               	goto	l1442
  1947     06F0                     u1000:
  1948     06F0                     l1526:
  1949                           
  1950                           ;keypad.c: 102:    return valor;
  1951     06F0  1283               	bcf	3,5	;RP0=0, select bank0
  1952     06F1  1303               	bcf	3,6	;RP1=0, select bank0
  1953     06F2  084C               	movf	keypad_getkey@valor,w
  1954     06F3                     l109:
  1955     06F3  0008               	return
  1956     06F4                     __end_of_keypad_getkey:
  1957                           
  1958                           	psect	text5
  1959     0499                     __ptext5:	
  1960 ;; *************** function _function_monitoreo *****************
  1961 ;; Defined at:
  1962 ;;		line 91 in file "mainseguridad.c"
  1963 ;; Parameters:    Size  Location     Type
  1964 ;;		None
  1965 ;; Auto vars:     Size  Location     Type
  1966 ;;  n               2    0        int 
  1967 ;; Return value:  Size  Location     Type
  1968 ;;                  1    wreg      void 
  1969 ;; Registers used:
  1970 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1971 ;; Tracked objects:
  1972 ;;		On entry : 0/0
  1973 ;;		On exit  : 0/0
  1974 ;;		Unchanged: 0/0
  1975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1976 ;;      Params:         0       0       0       0       0
  1977 ;;      Locals:         0       0       0       0       0
  1978 ;;      Temps:          0       6       0       0       0
  1979 ;;      Totals:         0       6       0       0       0
  1980 ;;Total ram usage:        6 bytes
  1981 ;; Hardware stack levels used: 1
  1982 ;; Hardware stack levels required when called: 3
  1983 ;; This function calls:
  1984 ;;		_LCD_String_xy
  1985 ;;		_monitoring_sensor
  1986 ;;		_sprintf
  1987 ;; This function is called by:
  1988 ;;		_main
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992     0499                     _function_monitoreo:	
  1993                           ;psect for function _function_monitoreo
  1994                           
  1995     0499                     l1704:	
  1996                           ;incstack = 0
  1997                           ; Regs used in _function_monitoreo: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1998                           
  1999                           
  2000                           ;mainseguridad.c: 92:     if(monitoring_sensor() == 1){
  2001     0499  120A  118A  22D7  120A  118A  	fcall	_monitoring_sensor
  2002     049E  3A01               	xorlw	1
  2003     049F  1D03               	skipz
  2004     04A0  2CA2               	goto	u1181
  2005     04A1  2CA3               	goto	u1180
  2006     04A2                     u1181:
  2007     04A2  2CDD               	goto	l190
  2008     04A3                     u1180:
  2009     04A3                     l1706:
  2010                           
  2011                           ;mainseguridad.c: 93:         estado = alarma;
  2012     04A3  3003               	movlw	3
  2013     04A4  1283               	bcf	3,5	;RP0=0, select bank0
  2014     04A5  1303               	bcf	3,6	;RP1=0, select bank0
  2015     04A6  00A5               	movwf	_estado
  2016     04A7                     l1708:
  2017     04A7  3010               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2018     04A8  00BC               	movwf	sprintf@f
  2019     04A9  0823               	movf	_var_sensor_ir,w
  2020     04AA  00CF               	movwf	??_function_monitoreo
  2021     04AB  01D0               	clrf	??_function_monitoreo+1
  2022     04AC  084F               	movf	??_function_monitoreo,w
  2023     04AD  00BD               	movwf	?_sprintf+1
  2024     04AE  0850               	movf	??_function_monitoreo+1,w
  2025     04AF  00BE               	movwf	?_sprintf+2
  2026     04B0  0822               	movf	_var_sensor_hall,w
  2027     04B1  00D1               	movwf	??_function_monitoreo+2
  2028     04B2  01D2               	clrf	??_function_monitoreo+3
  2029     04B3  0851               	movf	??_function_monitoreo+2,w
  2030     04B4  00BF               	movwf	?_sprintf+3
  2031     04B5  0852               	movf	??_function_monitoreo+3,w
  2032     04B6  00C0               	movwf	?_sprintf+4
  2033     04B7  0821               	movf	_var_sensor_metal,w
  2034     04B8  00D3               	movwf	??_function_monitoreo+4
  2035     04B9  01D4               	clrf	??_function_monitoreo+5
  2036     04BA  0853               	movf	??_function_monitoreo+4,w
  2037     04BB  00C1               	movwf	?_sprintf+5
  2038     04BC  0854               	movf	??_function_monitoreo+5,w
  2039     04BD  00C2               	movwf	?_sprintf+6
  2040     04BE  3026               	movlw	(low (_buffer| 0))& (0+255)
  2041     04BF  120A  118A  26F4  120A  118A  	fcall	_sprintf
  2042     04C4                     l1710:
  2043                           
  2044                           ;mainseguridad.c: 95:            LCD_String_xy(0,0,buffer);
  2045     04C4  01F5               	clrf	LCD_String_xy@pos
  2046     04C5  3026               	movlw	(low (_buffer| 0))& (0+255)
  2047     04C6  00F6               	movwf	LCD_String_xy@msg
  2048     04C7  3000               	movlw	0
  2049     04C8  00F7               	movwf	LCD_String_xy@msg+1
  2050     04C9  3000               	movlw	0
  2051     04CA  120A  118A  2339  120A  118A  	fcall	_LCD_String_xy
  2052                           
  2053                           ;mainseguridad.c: 96:             _delay((unsigned long)((500)*(8000000/4000.0)));
  2054     04CF  3006               	movlw	6
  2055     04D0  1283               	bcf	3,5	;RP0=0, select bank0
  2056     04D1  1303               	bcf	3,6	;RP1=0, select bank0
  2057     04D2  00D1               	movwf	??_function_monitoreo+2
  2058     04D3  3013               	movlw	19
  2059     04D4  00D0               	movwf	??_function_monitoreo+1
  2060     04D5  30AD               	movlw	173
  2061     04D6  00CF               	movwf	??_function_monitoreo
  2062     04D7                     u1287:
  2063     04D7  0BCF               	decfsz	??_function_monitoreo,f
  2064     04D8  2CD7               	goto	u1287
  2065     04D9  0BD0               	decfsz	??_function_monitoreo+1,f
  2066     04DA  2CD7               	goto	u1287
  2067     04DB  0BD1               	decfsz	??_function_monitoreo+2,f
  2068     04DC  2CD7               	goto	u1287
  2069     04DD                     l190:
  2070     04DD  0008               	return
  2071     04DE                     __end_of_function_monitoreo:
  2072                           
  2073                           	psect	text6
  2074     06F4                     __ptext6:	
  2075 ;; *************** function _sprintf *****************
  2076 ;; Defined at:
  2077 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  sp              1    wreg     PTR unsigned char 
  2080 ;;		 -> buffer(17), 
  2081 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2082 ;;		 -> STR_1(18), 
  2083 ;; Auto vars:     Size  Location     Type
  2084 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  2085 ;;		 -> buffer(17), 
  2086 ;;  tmpval          4    0        struct .
  2087 ;;  val             2   15[BANK0 ] unsigned int 
  2088 ;;  ccnt            2   12[BANK0 ] int 
  2089 ;;  cp              2    0        PTR const unsigned char 
  2090 ;;  len             2    0        unsigned int 
  2091 ;;  c               1   18[BANK0 ] unsigned char 
  2092 ;;  prec            1   14[BANK0 ] char 
  2093 ;;  flag            1   11[BANK0 ] unsigned char 
  2094 ;;  ap              1   10[BANK0 ] PTR void [1]
  2095 ;;		 -> ?_sprintf(2), 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  2    0[BANK0 ] int 
  2098 ;; Registers used:
  2099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2105 ;;      Params:         0       7       0       0       0
  2106 ;;      Locals:         0       9       0       0       0
  2107 ;;      Temps:          0       3       0       0       0
  2108 ;;      Totals:         0      19       0       0       0
  2109 ;;Total ram usage:       19 bytes
  2110 ;; Hardware stack levels used: 1
  2111 ;; Hardware stack levels required when called: 1
  2112 ;; This function calls:
  2113 ;;		___lwdiv
  2114 ;;		___lwmod
  2115 ;; This function is called by:
  2116 ;;		_function_monitoreo
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120     06F4                     _sprintf:	
  2121                           ;psect for function _sprintf
  2122                           
  2123                           
  2124                           ;incstack = 0
  2125                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2126                           ;sprintf@sp stored from wreg
  2127     06F4  1283               	bcf	3,5	;RP0=0, select bank0
  2128     06F5  1303               	bcf	3,6	;RP1=0, select bank0
  2129     06F6  00CD               	movwf	sprintf@sp
  2130     06F7                     l1544:
  2131                           
  2132                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 521: 
      +                           signed char prec;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c:
      +                           525:  unsigned char flag;
  2133     06F7  01C8               	clrf	sprintf@ccnt
  2134     06F8  01C9               	clrf	sprintf@ccnt+1
  2135     06F9                     l1546:
  2136                           
  2137                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 543:  } tmpval;;C
      +                          :\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 545:  unsigned int 
      +                          val;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 546:  unsigne
      +                          d len;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 547:  const
      +                           char * cp;;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 550:  
      +                          *ap = __va_start();
  2138     06F9  303D               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2139     06FA  00C6               	movwf	sprintf@ap
  2140                           
  2141                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2142     06FB  2FCD               	goto	l1606
  2143     06FC                     l1548:
  2144                           
  2145                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2146     06FC  3025               	movlw	37
  2147     06FD  064E               	xorwf	sprintf@c,w
  2148     06FE  1903               	btfsc	3,2
  2149     06FF  2F01               	goto	u1041
  2150     0700  2F02               	goto	u1040
  2151     0701                     u1041:
  2152     0701  2F12               	goto	l1556
  2153     0702                     u1040:
  2154     0702                     l1550:
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)),(++
      +                          ccnt));
  2157     0702  084D               	movf	sprintf@sp,w
  2158     0703  0084               	movwf	4
  2159     0704  084E               	movf	sprintf@c,w
  2160     0705  1383               	bcf	3,7	;select IRP bank0
  2161     0706  0080               	movwf	0
  2162     0707                     l1552:
  2163     0707  3001               	movlw	1
  2164     0708  00FF               	movwf	btemp+1
  2165     0709  087F               	movf	btemp+1,w
  2166     070A  07CD               	addwf	sprintf@sp,f
  2167     070B                     l1554:
  2168     070B  3001               	movlw	1
  2169     070C  07C8               	addwf	sprintf@ccnt,f
  2170     070D  1803               	skipnc
  2171     070E  0AC9               	incf	sprintf@ccnt+1,f
  2172     070F  3000               	movlw	0
  2173     0710  07C9               	addwf	sprintf@ccnt+1,f
  2174                           
  2175                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 559:    continue;
  2176     0711  2FCD               	goto	l1606
  2177     0712                     l1556:
  2178                           
  2179                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2180     0712  01C7               	clrf	sprintf@flag
  2181     0713                     l1560:	
  2182                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 661:   switch(c =
      +                           *f++) {
  2183                           
  2184     0713  3001               	movlw	1
  2185     0714  07BC               	addwf	sprintf@f,f
  2186     0715  30FF               	movlw	-1
  2187     0716  073C               	addwf	sprintf@f,w
  2188     0717  0084               	movwf	4
  2189     0718  120A  118A  200D  120A  118A  	fcall	stringdir
  2190     071D  00CE               	movwf	sprintf@c
  2191     071E  00C3               	movwf	??_sprintf
  2192     071F  01C4               	clrf	??_sprintf+1
  2193                           
  2194                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2195                           ; Switch size 1, requested type "simple"
  2196                           ; Number of cases is 1, Range of values is 0 to 0
  2197                           ; switch strategies available:
  2198                           ; Name         Instructions Cycles
  2199                           ; simple_byte            4     3 (average)
  2200                           ; direct_byte           11     8 (fixed)
  2201                           ; jumptable            260     6 (fixed)
  2202                           ;	Chosen strategy is simple_byte
  2203     0720  0844               	movf	??_sprintf+1,w
  2204     0721  3A00               	xorlw	0	; case 0
  2205     0722  1903               	skipnz
  2206     0723  2F25               	goto	l1786
  2207     0724  2FCD               	goto	l1606
  2208     0725                     l1786:
  2209                           
  2210                           ; Switch size 1, requested type "simple"
  2211                           ; Number of cases is 3, Range of values is 0 to 105
  2212                           ; switch strategies available:
  2213                           ; Name         Instructions Cycles
  2214                           ; simple_byte           10     6 (average)
  2215                           ; jumptable            260     6 (fixed)
  2216                           ;	Chosen strategy is simple_byte
  2217     0725  0843               	movf	??_sprintf,w
  2218     0726  3A00               	xorlw	0	; case 0
  2219     0727  1903               	skipnz
  2220     0728  2FDD               	goto	l1608
  2221     0729  3A64               	xorlw	100	; case 100
  2222     072A  1903               	skipnz
  2223     072B  2F30               	goto	l1562
  2224     072C  3A0D               	xorlw	13	; case 105
  2225     072D  1903               	skipnz
  2226     072E  2F30               	goto	l1562
  2227     072F  2FCD               	goto	l1606
  2228     0730                     l1562:
  2229                           
  2230                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2231     0730  0846               	movf	sprintf@ap,w
  2232     0731  0084               	movwf	4
  2233     0732  1383               	bcf	3,7	;select IRP bank0
  2234     0733  0800               	movf	0,w
  2235     0734  00CB               	movwf	sprintf@val
  2236     0735  0A84               	incf	4,f
  2237     0736  0800               	movf	0,w
  2238     0737  00CC               	movwf	sprintf@val+1
  2239     0738                     l1564:
  2240     0738  3002               	movlw	2
  2241     0739  00FF               	movwf	btemp+1
  2242     073A  087F               	movf	btemp+1,w
  2243     073B  07C6               	addwf	sprintf@ap,f
  2244     073C                     l1566:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1287:    if((int)
      +                          val < 0) {
  2247     073C  1FCC               	btfss	sprintf@val+1,7
  2248     073D  2F3F               	goto	u1051
  2249     073E  2F40               	goto	u1050
  2250     073F                     u1051:
  2251     073F  2F49               	goto	l1572
  2252     0740                     u1050:
  2253     0740                     l1568:
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
  2256     0740  3003               	movlw	3
  2257     0741  00FF               	movwf	btemp+1
  2258     0742  087F               	movf	btemp+1,w
  2259     0743  04C7               	iorwf	sprintf@flag,f
  2260     0744                     l1570:
  2261                           
  2262                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
  2263     0744  09CB               	comf	sprintf@val,f
  2264     0745  09CC               	comf	sprintf@val+1,f
  2265     0746  0ACB               	incf	sprintf@val,f
  2266     0747  1903               	skipnz
  2267     0748  0ACC               	incf	sprintf@val+1,f
  2268     0749                     l1572:
  2269                           
  2270                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1331:    for(c = 1 ; c !=
      +                           sizeof dpowers/sizeof dpowers[0] ; c++)
  2271     0749  01CE               	clrf	sprintf@c
  2272     074A  0ACE               	incf	sprintf@c,f
  2273     074B                     l1578:
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
  2276     074B  084E               	movf	sprintf@c,w
  2277     074C  00C3               	movwf	??_sprintf
  2278     074D  0743               	addwf	??_sprintf,w
  2279     074E  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2280     074F  0084               	movwf	4
  2281     0750  120A  118A  200D  120A  118A  	fcall	stringdir
  2282     0755  00C4               	movwf	??_sprintf+1
  2283     0756  120A  118A  200D  120A  118A  	fcall	stringdir
  2284     075B  00C5               	movwf	??_sprintf+2
  2285     075C  0845               	movf	??_sprintf+2,w
  2286     075D  024C               	subwf	sprintf@val+1,w
  2287     075E  1D03               	skipz
  2288     075F  2F62               	goto	u1065
  2289     0760  0844               	movf	??_sprintf+1,w
  2290     0761  024B               	subwf	sprintf@val,w
  2291     0762                     u1065:
  2292     0762  1803               	skipnc
  2293     0763  2F65               	goto	u1061
  2294     0764  2F66               	goto	u1060
  2295     0765                     u1061:
  2296     0765  2F67               	goto	l1582
  2297     0766                     u1060:
  2298     0766  2F71               	goto	l1586
  2299     0767                     l1582:
  2300     0767  3001               	movlw	1
  2301     0768  00FF               	movwf	btemp+1
  2302     0769  087F               	movf	btemp+1,w
  2303     076A  07CE               	addwf	sprintf@c,f
  2304     076B                     l1584:
  2305     076B  3005               	movlw	5
  2306     076C  064E               	xorwf	sprintf@c,w
  2307     076D  1D03               	btfss	3,2
  2308     076E  2F70               	goto	u1071
  2309     076F  2F71               	goto	u1070
  2310     0770                     u1071:
  2311     0770  2F4B               	goto	l1578
  2312     0771                     u1070:
  2313     0771                     l1586:
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1464:    if(flag & 0x03)
  2316     0771  0847               	movf	sprintf@flag,w
  2317     0772  3903               	andlw	3
  2318     0773  1903               	btfsc	3,2
  2319     0774  2F76               	goto	u1081
  2320     0775  2F77               	goto	u1080
  2321     0776                     u1081:
  2322     0776  2F86               	goto	l1594
  2323     0777                     u1080:
  2324     0777                     l1588:
  2325                           
  2326                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')),(++ccnt));
  2327     0777  084D               	movf	sprintf@sp,w
  2328     0778  0084               	movwf	4
  2329     0779  302D               	movlw	45
  2330     077A  1383               	bcf	3,7	;select IRP bank0
  2331     077B  0080               	movwf	0
  2332     077C                     l1590:
  2333     077C  3001               	movlw	1
  2334     077D  00FF               	movwf	btemp+1
  2335     077E  087F               	movf	btemp+1,w
  2336     077F  07CD               	addwf	sprintf@sp,f
  2337     0780                     l1592:
  2338     0780  3001               	movlw	1
  2339     0781  07C8               	addwf	sprintf@ccnt,f
  2340     0782  1803               	skipnc
  2341     0783  0AC9               	incf	sprintf@ccnt+1,f
  2342     0784  3000               	movlw	0
  2343     0785  07C9               	addwf	sprintf@ccnt+1,f
  2344     0786                     l1594:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1495:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1498:   prec = c;
  2347     0786  084E               	movf	sprintf@c,w
  2348     0787  00CA               	movwf	sprintf@prec
  2349                           
  2350                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2351     0788  2FC4               	goto	l1604
  2352     0789                     l1596:
  2353                           
  2354                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned char)prec]) % 10 + '0';
  2355     0789  300A               	movlw	10
  2356     078A  00F7               	movwf	___lwmod@divisor
  2357     078B  3000               	movlw	0
  2358     078C  00F8               	movwf	___lwmod@divisor+1
  2359     078D  084A               	movf	sprintf@prec,w
  2360     078E  00C3               	movwf	??_sprintf
  2361     078F  0743               	addwf	??_sprintf,w
  2362     0790  3E01               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2363     0791  0084               	movwf	4
  2364     0792  120A  118A  200D  120A  118A  	fcall	stringdir
  2365     0797  00F0               	movwf	___lwdiv@divisor
  2366     0798  120A  118A  200D  120A  118A  	fcall	stringdir
  2367     079D  00F1               	movwf	___lwdiv@divisor+1
  2368     079E  084C               	movf	sprintf@val+1,w
  2369     079F  00F3               	movwf	___lwdiv@dividend+1
  2370     07A0  084B               	movf	sprintf@val,w
  2371     07A1  00F2               	movwf	___lwdiv@dividend
  2372     07A2  120A  118A  2455  120A  118A  	fcall	___lwdiv
  2373     07A7  0871               	movf	?___lwdiv+1,w
  2374     07A8  00FA               	movwf	___lwmod@dividend+1
  2375     07A9  0870               	movf	?___lwdiv,w
  2376     07AA  00F9               	movwf	___lwmod@dividend
  2377     07AB  120A  118A  241B  120A  118A  	fcall	___lwmod
  2378     07B0  0877               	movf	?___lwmod,w
  2379     07B1  3E30               	addlw	48
  2380     07B2  1283               	bcf	3,5	;RP0=0, select bank0
  2381     07B3  1303               	bcf	3,6	;RP1=0, select bank0
  2382     07B4  00CE               	movwf	sprintf@c
  2383     07B5                     l1598:
  2384                           
  2385                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)),
      +                          (++ccnt));
  2386     07B5  084D               	movf	sprintf@sp,w
  2387     07B6  0084               	movwf	4
  2388     07B7  084E               	movf	sprintf@c,w
  2389     07B8  1383               	bcf	3,7	;select IRP bank0
  2390     07B9  0080               	movwf	0
  2391     07BA                     l1600:
  2392     07BA  3001               	movlw	1
  2393     07BB  00FF               	movwf	btemp+1
  2394     07BC  087F               	movf	btemp+1,w
  2395     07BD  07CD               	addwf	sprintf@sp,f
  2396     07BE                     l1602:
  2397     07BE  3001               	movlw	1
  2398     07BF  07C8               	addwf	sprintf@ccnt,f
  2399     07C0  1803               	skipnc
  2400     07C1  0AC9               	incf	sprintf@ccnt+1,f
  2401     07C2  3000               	movlw	0
  2402     07C3  07C9               	addwf	sprintf@ccnt+1,f
  2403     07C4                     l1604:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
  2406     07C4  30FF               	movlw	255
  2407     07C5  00FF               	movwf	btemp+1
  2408     07C6  087F               	movf	btemp+1,w
  2409     07C7  07CA               	addwf	sprintf@prec,f
  2410     07C8  0A4A               	incf	sprintf@prec,w
  2411     07C9  1D03               	btfss	3,2
  2412     07CA  2FCC               	goto	u1091
  2413     07CB  2FCD               	goto	u1090
  2414     07CC                     u1091:
  2415     07CC  2F89               	goto	l1596
  2416     07CD                     u1090:
  2417     07CD                     l1606:
  2418                           
  2419                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2420     07CD  3001               	movlw	1
  2421     07CE  07BC               	addwf	sprintf@f,f
  2422     07CF  30FF               	movlw	-1
  2423     07D0  073C               	addwf	sprintf@f,w
  2424     07D1  0084               	movwf	4
  2425     07D2  120A  118A  200D  120A  118A  	fcall	stringdir
  2426     07D7  00CE               	movwf	sprintf@c
  2427     07D8  084E               	movf	sprintf@c,w
  2428     07D9  1D03               	btfss	3,2
  2429     07DA  2FDC               	goto	u1101
  2430     07DB  2FDD               	goto	u1100
  2431     07DC                     u1101:
  2432     07DC  2EFC               	goto	l1548
  2433     07DD                     u1100:
  2434     07DD                     l1608:
  2435                           
  2436                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  2437     07DD  084D               	movf	sprintf@sp,w
  2438     07DE  0084               	movwf	4
  2439     07DF  1383               	bcf	3,7	;select IRP bank0
  2440     07E0  0180               	clrf	0
  2441     07E1                     l1610:
  2442                           
  2443                           ;C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\doprnt.c: 1566:  return ccn
      +                          t;
  2444     07E1  0849               	movf	sprintf@ccnt+1,w
  2445     07E2  00BD               	movwf	?_sprintf+1
  2446     07E3  0848               	movf	sprintf@ccnt,w
  2447     07E4  00BC               	movwf	?_sprintf
  2448     07E5                     l327:
  2449     07E5  0008               	return
  2450     07E6                     __end_of_sprintf:
  2451                           
  2452                           	psect	text7
  2453     041B                     __ptext7:	
  2454 ;; *************** function ___lwmod *****************
  2455 ;; Defined at:
  2456 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwmod.c"
  2457 ;; Parameters:    Size  Location     Type
  2458 ;;  divisor         2    7[COMMON] unsigned int 
  2459 ;;  dividend        2    9[COMMON] unsigned int 
  2460 ;; Auto vars:     Size  Location     Type
  2461 ;;  counter         1   11[COMMON] unsigned char 
  2462 ;; Return value:  Size  Location     Type
  2463 ;;                  2    7[COMMON] unsigned int 
  2464 ;; Registers used:
  2465 ;;		wreg, status,2, status,0, btemp+1
  2466 ;; Tracked objects:
  2467 ;;		On entry : 0/0
  2468 ;;		On exit  : 0/0
  2469 ;;		Unchanged: 0/0
  2470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2471 ;;      Params:         4       0       0       0       0
  2472 ;;      Locals:         1       0       0       0       0
  2473 ;;      Temps:          0       0       0       0       0
  2474 ;;      Totals:         5       0       0       0       0
  2475 ;;Total ram usage:        5 bytes
  2476 ;; Hardware stack levels used: 1
  2477 ;; This function calls:
  2478 ;;		Nothing
  2479 ;; This function is called by:
  2480 ;;		_sprintf
  2481 ;; This function uses a non-reentrant model
  2482 ;;
  2483                           
  2484     041B                     ___lwmod:	
  2485                           ;psect for function ___lwmod
  2486                           
  2487     041B                     l1390:	
  2488                           ;incstack = 0
  2489                           ; Regs used in ___lwmod: [wreg+status,2+status,0+btemp+1]
  2490                           
  2491     041B  0877               	movf	___lwmod@divisor,w
  2492     041C  0478               	iorwf	___lwmod@divisor+1,w
  2493     041D  1903               	btfsc	3,2
  2494     041E  2C20               	goto	u721
  2495     041F  2C21               	goto	u720
  2496     0420                     u721:
  2497     0420  2C50               	goto	l1408
  2498     0421                     u720:
  2499     0421                     l1392:
  2500     0421  01FB               	clrf	___lwmod@counter
  2501     0422  0AFB               	incf	___lwmod@counter,f
  2502     0423  2C2F               	goto	l1398
  2503     0424                     l1394:
  2504     0424  3001               	movlw	1
  2505     0425                     u735:
  2506     0425  1003               	clrc
  2507     0426  0DF7               	rlf	___lwmod@divisor,f
  2508     0427  0DF8               	rlf	___lwmod@divisor+1,f
  2509     0428  3EFF               	addlw	-1
  2510     0429  1D03               	skipz
  2511     042A  2C25               	goto	u735
  2512     042B                     l1396:
  2513     042B  3001               	movlw	1
  2514     042C  00FF               	movwf	btemp+1
  2515     042D  087F               	movf	btemp+1,w
  2516     042E  07FB               	addwf	___lwmod@counter,f
  2517     042F                     l1398:
  2518     042F  1FF8               	btfss	___lwmod@divisor+1,7
  2519     0430  2C32               	goto	u741
  2520     0431  2C33               	goto	u740
  2521     0432                     u741:
  2522     0432  2C24               	goto	l1394
  2523     0433                     u740:
  2524     0433                     l1400:
  2525     0433  0878               	movf	___lwmod@divisor+1,w
  2526     0434  027A               	subwf	___lwmod@dividend+1,w
  2527     0435  1D03               	skipz
  2528     0436  2C39               	goto	u755
  2529     0437  0877               	movf	___lwmod@divisor,w
  2530     0438  0279               	subwf	___lwmod@dividend,w
  2531     0439                     u755:
  2532     0439  1C03               	skipc
  2533     043A  2C3C               	goto	u751
  2534     043B  2C3D               	goto	u750
  2535     043C                     u751:
  2536     043C  2C43               	goto	l1404
  2537     043D                     u750:
  2538     043D                     l1402:
  2539     043D  0877               	movf	___lwmod@divisor,w
  2540     043E  02F9               	subwf	___lwmod@dividend,f
  2541     043F  0878               	movf	___lwmod@divisor+1,w
  2542     0440  1C03               	skipc
  2543     0441  03FA               	decf	___lwmod@dividend+1,f
  2544     0442  02FA               	subwf	___lwmod@dividend+1,f
  2545     0443                     l1404:
  2546     0443  3001               	movlw	1
  2547     0444                     u765:
  2548     0444  1003               	clrc
  2549     0445  0CF8               	rrf	___lwmod@divisor+1,f
  2550     0446  0CF7               	rrf	___lwmod@divisor,f
  2551     0447  3EFF               	addlw	-1
  2552     0448  1D03               	skipz
  2553     0449  2C44               	goto	u765
  2554     044A                     l1406:
  2555     044A  3001               	movlw	1
  2556     044B  02FB               	subwf	___lwmod@counter,f
  2557     044C  1D03               	btfss	3,2
  2558     044D  2C4F               	goto	u771
  2559     044E  2C50               	goto	u770
  2560     044F                     u771:
  2561     044F  2C33               	goto	l1400
  2562     0450                     u770:
  2563     0450                     l1408:
  2564     0450  087A               	movf	___lwmod@dividend+1,w
  2565     0451  00F8               	movwf	?___lwmod+1
  2566     0452  0879               	movf	___lwmod@dividend,w
  2567     0453  00F7               	movwf	?___lwmod
  2568     0454                     l613:
  2569     0454  0008               	return
  2570     0455                     __end_of___lwmod:
  2571                           
  2572                           	psect	text8
  2573     0455                     __ptext8:	
  2574 ;; *************** function ___lwdiv *****************
  2575 ;; Defined at:
  2576 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c90\common\lwdiv.c"
  2577 ;; Parameters:    Size  Location     Type
  2578 ;;  divisor         2    0[COMMON] unsigned int 
  2579 ;;  dividend        2    2[COMMON] unsigned int 
  2580 ;; Auto vars:     Size  Location     Type
  2581 ;;  quotient        2    4[COMMON] unsigned int 
  2582 ;;  counter         1    6[COMMON] unsigned char 
  2583 ;; Return value:  Size  Location     Type
  2584 ;;                  2    0[COMMON] unsigned int 
  2585 ;; Registers used:
  2586 ;;		wreg, status,2, status,0, btemp+1
  2587 ;; Tracked objects:
  2588 ;;		On entry : 0/0
  2589 ;;		On exit  : 0/0
  2590 ;;		Unchanged: 0/0
  2591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2592 ;;      Params:         4       0       0       0       0
  2593 ;;      Locals:         3       0       0       0       0
  2594 ;;      Temps:          0       0       0       0       0
  2595 ;;      Totals:         7       0       0       0       0
  2596 ;;Total ram usage:        7 bytes
  2597 ;; Hardware stack levels used: 1
  2598 ;; This function calls:
  2599 ;;		Nothing
  2600 ;; This function is called by:
  2601 ;;		_sprintf
  2602 ;; This function uses a non-reentrant model
  2603 ;;
  2604                           
  2605     0455                     ___lwdiv:	
  2606                           ;psect for function ___lwdiv
  2607                           
  2608     0455                     l1364:	
  2609                           ;incstack = 0
  2610                           ; Regs used in ___lwdiv: [wreg+status,2+status,0+btemp+1]
  2611                           
  2612     0455  01F4               	clrf	___lwdiv@quotient
  2613     0456  01F5               	clrf	___lwdiv@quotient+1
  2614     0457                     l1366:
  2615     0457  0870               	movf	___lwdiv@divisor,w
  2616     0458  0471               	iorwf	___lwdiv@divisor+1,w
  2617     0459  1903               	btfsc	3,2
  2618     045A  2C5C               	goto	u651
  2619     045B  2C5D               	goto	u650
  2620     045C                     u651:
  2621     045C  2C94               	goto	l1386
  2622     045D                     u650:
  2623     045D                     l1368:
  2624     045D  01F6               	clrf	___lwdiv@counter
  2625     045E  0AF6               	incf	___lwdiv@counter,f
  2626     045F  2C6B               	goto	l1374
  2627     0460                     l1370:
  2628     0460  3001               	movlw	1
  2629     0461                     u665:
  2630     0461  1003               	clrc
  2631     0462  0DF0               	rlf	___lwdiv@divisor,f
  2632     0463  0DF1               	rlf	___lwdiv@divisor+1,f
  2633     0464  3EFF               	addlw	-1
  2634     0465  1D03               	skipz
  2635     0466  2C61               	goto	u665
  2636     0467                     l1372:
  2637     0467  3001               	movlw	1
  2638     0468  00FF               	movwf	btemp+1
  2639     0469  087F               	movf	btemp+1,w
  2640     046A  07F6               	addwf	___lwdiv@counter,f
  2641     046B                     l1374:
  2642     046B  1FF1               	btfss	___lwdiv@divisor+1,7
  2643     046C  2C6E               	goto	u671
  2644     046D  2C6F               	goto	u670
  2645     046E                     u671:
  2646     046E  2C60               	goto	l1370
  2647     046F                     u670:
  2648     046F                     l1376:
  2649     046F  3001               	movlw	1
  2650     0470                     u685:
  2651     0470  1003               	clrc
  2652     0471  0DF4               	rlf	___lwdiv@quotient,f
  2653     0472  0DF5               	rlf	___lwdiv@quotient+1,f
  2654     0473  3EFF               	addlw	-1
  2655     0474  1D03               	skipz
  2656     0475  2C70               	goto	u685
  2657     0476  0871               	movf	___lwdiv@divisor+1,w
  2658     0477  0273               	subwf	___lwdiv@dividend+1,w
  2659     0478  1D03               	skipz
  2660     0479  2C7C               	goto	u695
  2661     047A  0870               	movf	___lwdiv@divisor,w
  2662     047B  0272               	subwf	___lwdiv@dividend,w
  2663     047C                     u695:
  2664     047C  1C03               	skipc
  2665     047D  2C7F               	goto	u691
  2666     047E  2C80               	goto	u690
  2667     047F                     u691:
  2668     047F  2C87               	goto	l1382
  2669     0480                     u690:
  2670     0480                     l1378:
  2671     0480  0870               	movf	___lwdiv@divisor,w
  2672     0481  02F2               	subwf	___lwdiv@dividend,f
  2673     0482  0871               	movf	___lwdiv@divisor+1,w
  2674     0483  1C03               	skipc
  2675     0484  03F3               	decf	___lwdiv@dividend+1,f
  2676     0485  02F3               	subwf	___lwdiv@dividend+1,f
  2677     0486                     l1380:
  2678     0486  1474               	bsf	___lwdiv@quotient,0
  2679     0487                     l1382:
  2680     0487  3001               	movlw	1
  2681     0488                     u705:
  2682     0488  1003               	clrc
  2683     0489  0CF1               	rrf	___lwdiv@divisor+1,f
  2684     048A  0CF0               	rrf	___lwdiv@divisor,f
  2685     048B  3EFF               	addlw	-1
  2686     048C  1D03               	skipz
  2687     048D  2C88               	goto	u705
  2688     048E                     l1384:
  2689     048E  3001               	movlw	1
  2690     048F  02F6               	subwf	___lwdiv@counter,f
  2691     0490  1D03               	btfss	3,2
  2692     0491  2C93               	goto	u711
  2693     0492  2C94               	goto	u710
  2694     0493                     u711:
  2695     0493  2C6F               	goto	l1376
  2696     0494                     u710:
  2697     0494                     l1386:
  2698     0494  0875               	movf	___lwdiv@quotient+1,w
  2699     0495  00F1               	movwf	?___lwdiv+1
  2700     0496  0874               	movf	___lwdiv@quotient,w
  2701     0497  00F0               	movwf	?___lwdiv
  2702     0498                     l603:
  2703     0498  0008               	return
  2704     0499                     __end_of___lwdiv:
  2705                           
  2706                           	psect	text9
  2707     02D7                     __ptext9:	
  2708 ;; *************** function _monitoring_sensor *****************
  2709 ;; Defined at:
  2710 ;;		line 19 in file "sensor.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  alarm_activ     1    0[COMMON] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      unsigned char 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2724 ;;      Params:         0       0       0       0       0
  2725 ;;      Locals:         1       0       0       0       0
  2726 ;;      Temps:          0       0       0       0       0
  2727 ;;      Totals:         1       0       0       0       0
  2728 ;;Total ram usage:        1 bytes
  2729 ;; Hardware stack levels used: 1
  2730 ;; This function calls:
  2731 ;;		Nothing
  2732 ;; This function is called by:
  2733 ;;		_function_monitoreo
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737     02D7                     _monitoring_sensor:	
  2738                           ;psect for function _monitoring_sensor
  2739                           
  2740     02D7                     l1530:	
  2741                           ;incstack = 0
  2742                           ; Regs used in _monitoring_sensor: [wreg+status,2]
  2743                           
  2744                           
  2745                           ;sensor.c: 20:         unsigned char alarm_activ=0;
  2746     02D7  01F0               	clrf	monitoring_sensor@alarm_activ
  2747     02D8                     l1532:
  2748                           
  2749                           ;sensor.c: 21:     if(RC1 == 1){
  2750     02D8  1283               	bcf	3,5	;RP0=0, select bank0
  2751     02D9  1303               	bcf	3,6	;RP1=0, select bank0
  2752     02DA  1C87               	btfss	7,1	;volatile
  2753     02DB  2ADD               	goto	u1011
  2754     02DC  2ADE               	goto	u1010
  2755     02DD                     u1011:
  2756     02DD  2AE0               	goto	l214
  2757     02DE                     u1010:
  2758     02DE                     l1534:
  2759                           
  2760                           ;sensor.c: 22:         alarm_activ=1;
  2761     02DE  01F0               	clrf	monitoring_sensor@alarm_activ
  2762     02DF  0AF0               	incf	monitoring_sensor@alarm_activ,f
  2763     02E0                     l214:	
  2764                           ;sensor.c: 23:     }
  2765                           
  2766                           
  2767                           ;sensor.c: 24:     if(RC0 == 1){
  2768     02E0  1C07               	btfss	7,0	;volatile
  2769     02E1  2AE3               	goto	u1021
  2770     02E2  2AE4               	goto	u1020
  2771     02E3                     u1021:
  2772     02E3  2AE6               	goto	l215
  2773     02E4                     u1020:
  2774     02E4                     l1536:
  2775                           
  2776                           ;sensor.c: 25:         alarm_activ=1;
  2777     02E4  01F0               	clrf	monitoring_sensor@alarm_activ
  2778     02E5  0AF0               	incf	monitoring_sensor@alarm_activ,f
  2779     02E6                     l215:	
  2780                           ;sensor.c: 26:     }
  2781                           
  2782                           
  2783                           ;sensor.c: 27:     if(RC2 == 1){
  2784     02E6  1D07               	btfss	7,2	;volatile
  2785     02E7  2AE9               	goto	u1031
  2786     02E8  2AEA               	goto	u1030
  2787     02E9                     u1031:
  2788     02E9  2AEC               	goto	l1540
  2789     02EA                     u1030:
  2790     02EA                     l1538:
  2791                           
  2792                           ;sensor.c: 28:         alarm_activ=1;
  2793     02EA  01F0               	clrf	monitoring_sensor@alarm_activ
  2794     02EB  0AF0               	incf	monitoring_sensor@alarm_activ,f
  2795     02EC                     l1540:
  2796                           
  2797                           ;sensor.c: 30:     return alarm_activ;
  2798     02EC  0870               	movf	monitoring_sensor@alarm_activ,w
  2799     02ED                     l217:
  2800     02ED  0008               	return
  2801     02EE                     __end_of_monitoring_sensor:
  2802                           
  2803                           	psect	text10
  2804     02EE                     __ptext10:	
  2805 ;; *************** function _function_bloqueado *****************
  2806 ;; Defined at:
  2807 ;;		line 144 in file "mainseguridad.c"
  2808 ;; Parameters:    Size  Location     Type
  2809 ;;		None
  2810 ;; Auto vars:     Size  Location     Type
  2811 ;;		None
  2812 ;; Return value:  Size  Location     Type
  2813 ;;                  1    wreg      void 
  2814 ;; Registers used:
  2815 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2816 ;; Tracked objects:
  2817 ;;		On entry : 0/0
  2818 ;;		On exit  : 0/0
  2819 ;;		Unchanged: 0/0
  2820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2821 ;;      Params:         0       0       0       0       0
  2822 ;;      Locals:         0       0       0       0       0
  2823 ;;      Temps:          3       0       0       0       0
  2824 ;;      Totals:         3       0       0       0       0
  2825 ;;Total ram usage:        3 bytes
  2826 ;; Hardware stack levels used: 1
  2827 ;; Hardware stack levels required when called: 3
  2828 ;; This function calls:
  2829 ;;		_LCD_Clear
  2830 ;;		_LCD_String_xy
  2831 ;; This function is called by:
  2832 ;;		_main
  2833 ;; This function uses a non-reentrant model
  2834 ;;
  2835                           
  2836     02EE                     _function_bloqueado:	
  2837                           ;psect for function _function_bloqueado
  2838                           
  2839     02EE                     l1712:	
  2840                           ;incstack = 0
  2841                           ; Regs used in _function_bloqueado: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2842                           
  2843                           
  2844                           ;mainseguridad.c: 145:     LCD_Clear();
  2845     02EE  120A  118A  22A4  120A  118A  	fcall	_LCD_Clear
  2846     02F3                     l1714:
  2847                           
  2848                           ;mainseguridad.c: 146:     LCD_String_xy(0,0,"sistema bloqueado");
  2849     02F3  01F5               	clrf	LCD_String_xy@pos
  2850     02F4  3022               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  2851     02F5  00F6               	movwf	LCD_String_xy@msg
  2852     02F6  3080               	movlw	128
  2853     02F7  00F7               	movwf	LCD_String_xy@msg+1
  2854     02F8  3000               	movlw	0
  2855     02F9  120A  118A  2339  120A  118A  	fcall	_LCD_String_xy
  2856     02FE                     l1716:
  2857                           
  2858                           ;mainseguridad.c: 147:      PORTE = 0x04;
  2859     02FE  3004               	movlw	4
  2860     02FF  1283               	bcf	3,5	;RP0=0, select bank0
  2861     0300  1303               	bcf	3,6	;RP1=0, select bank0
  2862     0301  0089               	movwf	9	;volatile
  2863     0302                     l1718:
  2864                           
  2865                           ;mainseguridad.c: 148:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2866     0302  3006               	movlw	6
  2867     0303  00FC               	movwf	??_function_bloqueado+2
  2868     0304  3013               	movlw	19
  2869     0305  00FB               	movwf	??_function_bloqueado+1
  2870     0306  30AD               	movlw	173
  2871     0307  00FA               	movwf	??_function_bloqueado
  2872     0308                     u1297:
  2873     0308  0BFA               	decfsz	??_function_bloqueado,f
  2874     0309  2B08               	goto	u1297
  2875     030A  0BFB               	decfsz	??_function_bloqueado+1,f
  2876     030B  2B08               	goto	u1297
  2877     030C  0BFC               	decfsz	??_function_bloqueado+2,f
  2878     030D  2B08               	goto	u1297
  2879     030E  2B0F               	nop2
  2880     030F                     l1720:
  2881                           
  2882                           ;mainseguridad.c: 149:     estado = seguridad;
  2883     030F  1283               	bcf	3,5	;RP0=0, select bank0
  2884     0310  1303               	bcf	3,6	;RP1=0, select bank0
  2885     0311  01A5               	clrf	_estado
  2886     0312                     l205:
  2887     0312  0008               	return
  2888     0313                     __end_of_function_bloqueado:
  2889                           
  2890                           	psect	text11
  2891     035F                     __ptext11:	
  2892 ;; *************** function _function_alarma *****************
  2893 ;; Defined at:
  2894 ;;		line 135 in file "mainseguridad.c"
  2895 ;; Parameters:    Size  Location     Type
  2896 ;;		None
  2897 ;; Auto vars:     Size  Location     Type
  2898 ;;		None
  2899 ;; Return value:  Size  Location     Type
  2900 ;;                  1    wreg      void 
  2901 ;; Registers used:
  2902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2903 ;; Tracked objects:
  2904 ;;		On entry : 0/0
  2905 ;;		On exit  : 0/0
  2906 ;;		Unchanged: 0/0
  2907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2908 ;;      Params:         0       0       0       0       0
  2909 ;;      Locals:         0       0       0       0       0
  2910 ;;      Temps:          3       0       0       0       0
  2911 ;;      Totals:         3       0       0       0       0
  2912 ;;Total ram usage:        3 bytes
  2913 ;; Hardware stack levels used: 1
  2914 ;; Hardware stack levels required when called: 3
  2915 ;; This function calls:
  2916 ;;		_LCD_Clear
  2917 ;;		_LCD_String_xy
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923     035F                     _function_alarma:	
  2924                           ;psect for function _function_alarma
  2925                           
  2926     035F                     l1722:	
  2927                           ;incstack = 0
  2928                           ; Regs used in _function_alarma: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2929                           
  2930                           
  2931                           ;mainseguridad.c: 136:     LCD_Clear();
  2932     035F  120A  118A  22A4  120A  118A  	fcall	_LCD_Clear
  2933     0364                     l1724:
  2934                           
  2935                           ;mainseguridad.c: 137:     LCD_String_xy(0,0,"Alarma ?");
  2936     0364  01F5               	clrf	LCD_String_xy@pos
  2937     0365  3060               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  2938     0366  00F6               	movwf	LCD_String_xy@msg
  2939     0367  3080               	movlw	128
  2940     0368  00F7               	movwf	LCD_String_xy@msg+1
  2941     0369  3000               	movlw	0
  2942     036A  120A  118A  2339  120A  118A  	fcall	_LCD_String_xy
  2943     036F                     l1726:
  2944                           
  2945                           ;mainseguridad.c: 138:      PORTE = 0x04;
  2946     036F  3004               	movlw	4
  2947     0370  1283               	bcf	3,5	;RP0=0, select bank0
  2948     0371  1303               	bcf	3,6	;RP1=0, select bank0
  2949     0372  0089               	movwf	9	;volatile
  2950     0373                     l1728:
  2951                           
  2952                           ;mainseguridad.c: 139:     _delay((unsigned long)((500)*(8000000/4000.0)));
  2953     0373  3006               	movlw	6
  2954     0374  00FC               	movwf	??_function_alarma+2
  2955     0375  3013               	movlw	19
  2956     0376  00FB               	movwf	??_function_alarma+1
  2957     0377  30AD               	movlw	173
  2958     0378  00FA               	movwf	??_function_alarma
  2959     0379                     u1307:
  2960     0379  0BFA               	decfsz	??_function_alarma,f
  2961     037A  2B79               	goto	u1307
  2962     037B  0BFB               	decfsz	??_function_alarma+1,f
  2963     037C  2B79               	goto	u1307
  2964     037D  0BFC               	decfsz	??_function_alarma+2,f
  2965     037E  2B79               	goto	u1307
  2966     037F  2B80               	nop2
  2967     0380                     l1730:
  2968                           
  2969                           ;mainseguridad.c: 140:     estado = monitoreo;
  2970     0380  1283               	bcf	3,5	;RP0=0, select bank0
  2971     0381  1303               	bcf	3,6	;RP1=0, select bank0
  2972     0382  01A5               	clrf	_estado
  2973     0383  0AA5               	incf	_estado,f
  2974     0384                     l202:
  2975     0384  0008               	return
  2976     0385                     __end_of_function_alarma:
  2977                           
  2978                           	psect	text12
  2979     0339                     __ptext12:	
  2980 ;; *************** function _LCD_String_xy *****************
  2981 ;; Defined at:
  2982 ;;		line 109 in file "lcd.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  row             1    wreg     unsigned char 
  2985 ;;  pos             1    5[COMMON] unsigned char 
  2986 ;;  msg             2    6[COMMON] PTR const unsigned char 
  2987 ;;		 -> STR_6(18), STR_5(9), STR_4(17), STR_3(15), 
  2988 ;;		 -> STR_2(12), buffer(17), 
  2989 ;; Auto vars:     Size  Location     Type
  2990 ;;  row             1    8[COMMON] unsigned char 
  2991 ;;  location        1    9[COMMON] unsigned char 
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3001 ;;      Params:         3       0       0       0       0
  3002 ;;      Locals:         2       0       0       0       0
  3003 ;;      Temps:          0       0       0       0       0
  3004 ;;      Totals:         5       0       0       0       0
  3005 ;;Total ram usage:        5 bytes
  3006 ;; Hardware stack levels used: 1
  3007 ;; Hardware stack levels required when called: 2
  3008 ;; This function calls:
  3009 ;;		_LCD_Command
  3010 ;;		_LCD_String
  3011 ;; This function is called by:
  3012 ;;		_function_monitoreo
  3013 ;;		_function_seguridad
  3014 ;;		_function_alarma
  3015 ;;		_function_bloqueado
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019     0339                     _LCD_String_xy:	
  3020                           ;psect for function _LCD_String_xy
  3021                           
  3022                           
  3023                           ;incstack = 0
  3024                           ; Regs used in _LCD_String_xy: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3025                           ;LCD_String_xy@row stored from wreg
  3026     0339  00F8               	movwf	LCD_String_xy@row
  3027     033A                     l1412:
  3028     033A                     l1414:
  3029                           
  3030                           ;lcd.c: 112:     if(row<=1)
  3031     033A  3002               	movlw	2
  3032     033B  0278               	subwf	LCD_String_xy@row,w
  3033     033C  1803               	skipnc
  3034     033D  2B3F               	goto	u781
  3035     033E  2B40               	goto	u780
  3036     033F                     u781:
  3037     033F  2B4B               	goto	l1420
  3038     0340                     u780:
  3039     0340                     l1416:
  3040                           
  3041                           ;lcd.c: 113:     {;lcd.c: 114:         location=(0x80) | ((pos) & 0x0f);
  3042     0340  0875               	movf	LCD_String_xy@pos,w
  3043     0341  390F               	andlw	15
  3044     0342  3880               	iorlw	128
  3045     0343  00F9               	movwf	LCD_String_xy@location
  3046     0344                     l1418:
  3047                           
  3048                           ;lcd.c: 115:         LCD_Command(location);
  3049     0344  0879               	movf	LCD_String_xy@location,w
  3050     0345  120A  118A  23AF  120A  118A  	fcall	_LCD_Command
  3051                           
  3052                           ;lcd.c: 116:     }
  3053     034A  2B55               	goto	l1424
  3054     034B                     l1420:
  3055                           
  3056                           ;lcd.c: 118:     {;lcd.c: 119:         location=(0xC0) | ((pos) & 0x0f);
  3057     034B  0875               	movf	LCD_String_xy@pos,w
  3058     034C  390F               	andlw	15
  3059     034D  38C0               	iorlw	192
  3060     034E  00F9               	movwf	LCD_String_xy@location
  3061     034F                     l1422:
  3062                           
  3063                           ;lcd.c: 120:         LCD_Command(location);
  3064     034F  0879               	movf	LCD_String_xy@location,w
  3065     0350  120A  118A  23AF  120A  118A  	fcall	_LCD_Command
  3066     0355                     l1424:
  3067                           
  3068                           ;lcd.c: 124:     LCD_String(msg);
  3069     0355  0876               	movf	LCD_String_xy@msg,w
  3070     0356  00F3               	movwf	LCD_String@msg
  3071     0357  0877               	movf	LCD_String_xy@msg+1,w
  3072     0358  00F4               	movwf	LCD_String@msg+1
  3073     0359  120A  118A  2313  120A  118A  	fcall	_LCD_String
  3074     035E                     l34:
  3075     035E  0008               	return
  3076     035F                     __end_of_LCD_String_xy:
  3077                           
  3078                           	psect	text13
  3079     0313                     __ptext13:	
  3080 ;; *************** function _LCD_String *****************
  3081 ;; Defined at:
  3082 ;;		line 99 in file "lcd.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;  msg             2    3[COMMON] PTR const unsigned char 
  3085 ;;		 -> STR_6(18), STR_5(9), STR_4(17), STR_3(15), 
  3086 ;;		 -> STR_2(12), buffer(17), 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;		None
  3089 ;; Return value:  Size  Location     Type
  3090 ;;                  1    wreg      void 
  3091 ;; Registers used:
  3092 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3093 ;; Tracked objects:
  3094 ;;		On entry : 0/0
  3095 ;;		On exit  : 0/0
  3096 ;;		Unchanged: 0/0
  3097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3098 ;;      Params:         2       0       0       0       0
  3099 ;;      Locals:         0       0       0       0       0
  3100 ;;      Temps:          0       0       0       0       0
  3101 ;;      Totals:         2       0       0       0       0
  3102 ;;Total ram usage:        2 bytes
  3103 ;; Hardware stack levels used: 1
  3104 ;; Hardware stack levels required when called: 1
  3105 ;; This function calls:
  3106 ;;		_LCD_Char
  3107 ;; This function is called by:
  3108 ;;		_LCD_String_xy
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           
  3112     0313                     _LCD_String:	
  3113                           ;psect for function _LCD_String
  3114                           
  3115     0313                     l1356:	
  3116                           ;incstack = 0
  3117                           ; Regs used in _LCD_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3118                           
  3119                           
  3120                           ;lcd.c: 99: void LCD_String(const char *msg);lcd.c: 100: {;lcd.c: 101:  while((*msg)!=0)
  3121     0313  2B28               	goto	l1362
  3122     0314                     l1358:
  3123                           
  3124                           ;lcd.c: 102:  {;lcd.c: 103:    LCD_Char(*msg);
  3125     0314  0874               	movf	LCD_String@msg+1,w
  3126     0315  00FF               	movwf	btemp+1
  3127     0316  0873               	movf	LCD_String@msg,w
  3128     0317  0084               	movwf	4
  3129     0318  120A  118A  2003  120A  118A  	fcall	stringtab
  3130     031D  120A  118A  23E5  120A  118A  	fcall	_LCD_Char
  3131     0322                     l1360:
  3132                           
  3133                           ;lcd.c: 104:    msg++;
  3134     0322  3001               	movlw	1
  3135     0323  07F3               	addwf	LCD_String@msg,f
  3136     0324  1803               	skipnc
  3137     0325  0AF4               	incf	LCD_String@msg+1,f
  3138     0326  3000               	movlw	0
  3139     0327  07F4               	addwf	LCD_String@msg+1,f
  3140     0328                     l1362:
  3141                           
  3142                           ;lcd.c: 101:  while((*msg)!=0)
  3143     0328  0874               	movf	LCD_String@msg+1,w
  3144     0329  1283               	bcf	3,5	;RP0=0, select bank0
  3145     032A  1303               	bcf	3,6	;RP1=0, select bank0
  3146     032B  00FF               	movwf	btemp+1
  3147     032C  0873               	movf	LCD_String@msg,w
  3148     032D  0084               	movwf	4
  3149     032E  120A  118A  2003  120A  118A  	fcall	stringtab
  3150     0333  3A00               	xorlw	0
  3151     0334  1D03               	skipz
  3152     0335  2B37               	goto	u641
  3153     0336  2B38               	goto	u640
  3154     0337                     u641:
  3155     0337  2B14               	goto	l1358
  3156     0338                     u640:
  3157     0338                     l29:
  3158     0338  0008               	return
  3159     0339                     __end_of_LCD_String:
  3160                           
  3161                           	psect	text14
  3162     03E5                     __ptext14:	
  3163 ;; *************** function _LCD_Char *****************
  3164 ;; Defined at:
  3165 ;;		line 84 in file "lcd.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  dat             1    wreg     unsigned char 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;  dat             1    2[COMMON] unsigned char 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3179 ;;      Params:         0       0       0       0       0
  3180 ;;      Locals:         1       0       0       0       0
  3181 ;;      Temps:          2       0       0       0       0
  3182 ;;      Totals:         3       0       0       0       0
  3183 ;;Total ram usage:        3 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; This function calls:
  3186 ;;		Nothing
  3187 ;; This function is called by:
  3188 ;;		_LCD_String
  3189 ;;		_function_seguridad
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193     03E5                     _LCD_Char:	
  3194                           ;psect for function _LCD_Char
  3195                           
  3196                           
  3197                           ;incstack = 0
  3198                           ; Regs used in _LCD_Char: [wreg+status,2+status,0]
  3199                           ;LCD_Char@dat stored from wreg
  3200     03E5  00F2               	movwf	LCD_Char@dat
  3201     03E6                     l1316:
  3202                           
  3203                           ;lcd.c: 84: void LCD_Char(unsigned char dat);lcd.c: 85: {;lcd.c: 86:  PORTD = (PORTD & 0
      +                          x0f) | (0xF0 & dat);
  3204     03E6  30F0               	movlw	240
  3205     03E7  0572               	andwf	LCD_Char@dat,w
  3206     03E8  00F0               	movwf	??_LCD_Char
  3207     03E9  1283               	bcf	3,5	;RP0=0, select bank0
  3208     03EA  1303               	bcf	3,6	;RP1=0, select bank0
  3209     03EB  0808               	movf	8,w	;volatile
  3210     03EC  390F               	andlw	15
  3211     03ED  0470               	iorwf	??_LCD_Char,w
  3212     03EE  0088               	movwf	8	;volatile
  3213     03EF                     l1318:
  3214                           
  3215                           ;lcd.c: 87:  RD0 = 1;
  3216     03EF  1408               	bsf	8,0	;volatile
  3217     03F0                     l1320:
  3218                           
  3219                           ;lcd.c: 88:  RD1 = 1;
  3220     03F0  1488               	bsf	8,1	;volatile
  3221     03F1                     l1322:
  3222                           
  3223                           ;lcd.c: 89:  __nop();
  3224     03F1  0000               	nop
  3225     03F2                     l1324:
  3226                           
  3227                           ;lcd.c: 90:  RD1 = 0;
  3228     03F2  1283               	bcf	3,5	;RP0=0, select bank0
  3229     03F3  1303               	bcf	3,6	;RP1=0, select bank0
  3230     03F4  1088               	bcf	8,1	;volatile
  3231     03F5                     l1326:
  3232                           
  3233                           ;lcd.c: 91:  _delay((unsigned long)((1)*(8000000/4000.0)));
  3234     03F5  3003               	movlw	3
  3235     03F6  00F1               	movwf	??_LCD_Char+1
  3236     03F7  3097               	movlw	151
  3237     03F8  00F0               	movwf	??_LCD_Char
  3238     03F9                     u1317:
  3239     03F9  0BF0               	decfsz	??_LCD_Char,f
  3240     03FA  2BF9               	goto	u1317
  3241     03FB  0BF1               	decfsz	??_LCD_Char+1,f
  3242     03FC  2BF9               	goto	u1317
  3243     03FD  2BFE               	nop2
  3244     03FE                     l1328:
  3245                           
  3246                           ;lcd.c: 92:     PORTD = (unsigned char)((PORTD & 0x0f) | (dat<<4));
  3247     03FE  0872               	movf	LCD_Char@dat,w
  3248     03FF  00F0               	movwf	??_LCD_Char
  3249     0400  3004               	movlw	4
  3250     0401                     u625:
  3251     0401  1003               	clrc
  3252     0402  0DF0               	rlf	??_LCD_Char,f
  3253     0403  3EFF               	addlw	-1
  3254     0404  1D03               	skipz
  3255     0405  2C01               	goto	u625
  3256     0406  1283               	bcf	3,5	;RP0=0, select bank0
  3257     0407  1303               	bcf	3,6	;RP1=0, select bank0
  3258     0408  0808               	movf	8,w	;volatile
  3259     0409  390F               	andlw	15
  3260     040A  0470               	iorwf	??_LCD_Char,w
  3261     040B  0088               	movwf	8	;volatile
  3262     040C                     l1330:
  3263                           
  3264                           ;lcd.c: 93:  RD1 = 1;
  3265     040C  1488               	bsf	8,1	;volatile
  3266     040D                     l1332:
  3267                           
  3268                           ;lcd.c: 94:  __nop();
  3269     040D  0000               	nop
  3270     040E                     l1334:
  3271                           
  3272                           ;lcd.c: 95:  RD1 = 0;
  3273     040E  1283               	bcf	3,5	;RP0=0, select bank0
  3274     040F  1303               	bcf	3,6	;RP1=0, select bank0
  3275     0410  1088               	bcf	8,1	;volatile
  3276                           
  3277                           ;lcd.c: 96:  _delay((unsigned long)((3)*(8000000/4000.0)));
  3278     0411  3008               	movlw	8
  3279     0412  00F1               	movwf	??_LCD_Char+1
  3280     0413  30C9               	movlw	201
  3281     0414  00F0               	movwf	??_LCD_Char
  3282     0415                     u1327:
  3283     0415  0BF0               	decfsz	??_LCD_Char,f
  3284     0416  2C15               	goto	u1327
  3285     0417  0BF1               	decfsz	??_LCD_Char+1,f
  3286     0418  2C15               	goto	u1327
  3287     0419  2C1A               	nop2
  3288     041A                     l23:
  3289     041A  0008               	return
  3290     041B                     __end_of_LCD_Char:
  3291                           
  3292                           	psect	text15
  3293     02A4                     __ptext15:	
  3294 ;; *************** function _LCD_Clear *****************
  3295 ;; Defined at:
  3296 ;;		line 140 in file "lcd.c"
  3297 ;; Parameters:    Size  Location     Type
  3298 ;;		None
  3299 ;; Auto vars:     Size  Location     Type
  3300 ;;		None
  3301 ;; Return value:  Size  Location     Type
  3302 ;;                  1    wreg      void 
  3303 ;; Registers used:
  3304 ;;		wreg, status,2, status,0, pclath, cstack
  3305 ;; Tracked objects:
  3306 ;;		On entry : 0/0
  3307 ;;		On exit  : 0/0
  3308 ;;		Unchanged: 0/0
  3309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3310 ;;      Params:         0       0       0       0       0
  3311 ;;      Locals:         0       0       0       0       0
  3312 ;;      Temps:          2       0       0       0       0
  3313 ;;      Totals:         2       0       0       0       0
  3314 ;;Total ram usage:        2 bytes
  3315 ;; Hardware stack levels used: 1
  3316 ;; Hardware stack levels required when called: 1
  3317 ;; This function calls:
  3318 ;;		_LCD_Command
  3319 ;; This function is called by:
  3320 ;;		_function_seguridad
  3321 ;;		_function_alarma
  3322 ;;		_function_bloqueado
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326     02A4                     _LCD_Clear:	
  3327                           ;psect for function _LCD_Clear
  3328                           
  3329     02A4                     l1426:	
  3330                           ;incstack = 0
  3331                           ; Regs used in _LCD_Clear: [wreg+status,2+status,0+pclath+cstack]
  3332                           
  3333                           
  3334                           ;lcd.c: 142:     LCD_Command(0x01);
  3335     02A4  3001               	movlw	1
  3336     02A5  120A  118A  23AF  120A  118A  	fcall	_LCD_Command
  3337     02AA                     l1428:
  3338                           
  3339                           ;lcd.c: 143:     _delay((unsigned long)((3)*(8000000/4000.0)));
  3340     02AA  3008               	movlw	8
  3341     02AB  00F4               	movwf	??_LCD_Clear+1
  3342     02AC  30C9               	movlw	201
  3343     02AD  00F3               	movwf	??_LCD_Clear
  3344     02AE                     u1337:
  3345     02AE  0BF3               	decfsz	??_LCD_Clear,f
  3346     02AF  2AAE               	goto	u1337
  3347     02B0  0BF4               	decfsz	??_LCD_Clear+1,f
  3348     02B1  2AAE               	goto	u1337
  3349     02B2  2AB3               	nop2
  3350     02B3                     l37:
  3351     02B3  0008               	return
  3352     02B4                     __end_of_LCD_Clear:
  3353                           
  3354                           	psect	text16
  3355     0385                     __ptext16:	
  3356 ;; *************** function _LCD_Init *****************
  3357 ;; Defined at:
  3358 ;;		line 31 in file "lcd.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;		None
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;		None
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      void 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0, pclath, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3372 ;;      Params:         0       0       0       0       0
  3373 ;;      Locals:         0       0       0       0       0
  3374 ;;      Temps:          2       0       0       0       0
  3375 ;;      Totals:         2       0       0       0       0
  3376 ;;Total ram usage:        2 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 1
  3379 ;; This function calls:
  3380 ;;		_LCD_Command
  3381 ;; This function is called by:
  3382 ;;		_main
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386     0385                     _LCD_Init:	
  3387                           ;psect for function _LCD_Init
  3388                           
  3389     0385                     l1636:	
  3390                           ;incstack = 0
  3391                           ; Regs used in _LCD_Init: [wreg+status,2+status,0+pclath+cstack]
  3392                           
  3393                           
  3394                           ;lcd.c: 33:     TRISD = 0;
  3395     0385  1683               	bsf	3,5	;RP0=1, select bank1
  3396     0386  1303               	bcf	3,6	;RP1=0, select bank1
  3397     0387  0188               	clrf	8	;volatile
  3398     0388                     l1638:
  3399                           
  3400                           ;lcd.c: 34:     _delay((unsigned long)((15)*(8000000/4000.0)));
  3401     0388  3027               	movlw	39
  3402     0389  00F4               	movwf	??_LCD_Init+1
  3403     038A  30F5               	movlw	245
  3404     038B  00F3               	movwf	??_LCD_Init
  3405     038C                     u1347:
  3406     038C  0BF3               	decfsz	??_LCD_Init,f
  3407     038D  2B8C               	goto	u1347
  3408     038E  0BF4               	decfsz	??_LCD_Init+1,f
  3409     038F  2B8C               	goto	u1347
  3410     0390                     l1640:
  3411                           
  3412                           ;lcd.c: 35:     LCD_Command(0x02);
  3413     0390  3002               	movlw	2
  3414     0391  120A  118A  23AF  120A  118A  	fcall	_LCD_Command
  3415     0396                     l1642:
  3416                           
  3417                           ;lcd.c: 36:     LCD_Command(0x28);
  3418     0396  3028               	movlw	40
  3419     0397  120A  118A  23AF  120A  118A  	fcall	_LCD_Command
  3420     039C                     l1644:
  3421                           
  3422                           ;lcd.c: 37:     LCD_Command(0x01);
  3423     039C  3001               	movlw	1
  3424     039D  120A  118A  23AF  120A  118A  	fcall	_LCD_Command
  3425     03A2                     l1646:
  3426                           
  3427                           ;lcd.c: 38:     LCD_Command(0x0c);
  3428     03A2  300C               	movlw	12
  3429     03A3  120A  118A  23AF  120A  118A  	fcall	_LCD_Command
  3430     03A8                     l1648:
  3431                           
  3432                           ;lcd.c: 39:     LCD_Command(0x06);
  3433     03A8  3006               	movlw	6
  3434     03A9  120A  118A  23AF  120A  118A  	fcall	_LCD_Command
  3435     03AE                     l17:
  3436     03AE  0008               	return
  3437     03AF                     __end_of_LCD_Init:
  3438                           
  3439                           	psect	text17
  3440     03AF                     __ptext17:	
  3441 ;; *************** function _LCD_Command *****************
  3442 ;; Defined at:
  3443 ;;		line 55 in file "lcd.c"
  3444 ;; Parameters:    Size  Location     Type
  3445 ;;  cmd             1    wreg     unsigned char 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  cmd             1    2[COMMON] unsigned char 
  3448 ;; Return value:  Size  Location     Type
  3449 ;;                  1    wreg      void 
  3450 ;; Registers used:
  3451 ;;		wreg, status,2, status,0
  3452 ;; Tracked objects:
  3453 ;;		On entry : 0/0
  3454 ;;		On exit  : 0/0
  3455 ;;		Unchanged: 0/0
  3456 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3457 ;;      Params:         0       0       0       0       0
  3458 ;;      Locals:         1       0       0       0       0
  3459 ;;      Temps:          2       0       0       0       0
  3460 ;;      Totals:         3       0       0       0       0
  3461 ;;Total ram usage:        3 bytes
  3462 ;; Hardware stack levels used: 1
  3463 ;; This function calls:
  3464 ;;		Nothing
  3465 ;; This function is called by:
  3466 ;;		_LCD_Init
  3467 ;;		_LCD_String_xy
  3468 ;;		_LCD_Clear
  3469 ;;		_function_seguridad
  3470 ;; This function uses a non-reentrant model
  3471 ;;
  3472                           
  3473     03AF                     _LCD_Command:	
  3474                           ;psect for function _LCD_Command
  3475                           
  3476                           
  3477                           ;incstack = 0
  3478                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
  3479                           ;LCD_Command@cmd stored from wreg
  3480     03AF  00F2               	movwf	LCD_Command@cmd
  3481     03B0                     l1336:
  3482                           
  3483                           ;lcd.c: 55: void LCD_Command(unsigned char cmd );lcd.c: 56: {;lcd.c: 57:  PORTD = (PORTD
      +                           & 0x0f) |(0xF0 & cmd);
  3484     03B0  30F0               	movlw	240
  3485     03B1  0572               	andwf	LCD_Command@cmd,w
  3486     03B2  00F0               	movwf	??_LCD_Command
  3487     03B3  1283               	bcf	3,5	;RP0=0, select bank0
  3488     03B4  1303               	bcf	3,6	;RP1=0, select bank0
  3489     03B5  0808               	movf	8,w	;volatile
  3490     03B6  390F               	andlw	15
  3491     03B7  0470               	iorwf	??_LCD_Command,w
  3492     03B8  0088               	movwf	8	;volatile
  3493     03B9                     l1338:
  3494                           
  3495                           ;lcd.c: 58:  RD0 = 0;
  3496     03B9  1008               	bcf	8,0	;volatile
  3497     03BA                     l1340:
  3498                           
  3499                           ;lcd.c: 59:  RD1 = 1;
  3500     03BA  1488               	bsf	8,1	;volatile
  3501     03BB                     l1342:
  3502                           
  3503                           ;lcd.c: 60:  __nop();
  3504     03BB  0000               	nop
  3505     03BC                     l1344:
  3506                           
  3507                           ;lcd.c: 61:  RD1 = 0;
  3508     03BC  1283               	bcf	3,5	;RP0=0, select bank0
  3509     03BD  1303               	bcf	3,6	;RP1=0, select bank0
  3510     03BE  1088               	bcf	8,1	;volatile
  3511     03BF                     l1346:
  3512                           
  3513                           ;lcd.c: 62:  _delay((unsigned long)((1)*(8000000/4000.0)));
  3514     03BF  3003               	movlw	3
  3515     03C0  00F1               	movwf	??_LCD_Command+1
  3516     03C1  3097               	movlw	151
  3517     03C2  00F0               	movwf	??_LCD_Command
  3518     03C3                     u1357:
  3519     03C3  0BF0               	decfsz	??_LCD_Command,f
  3520     03C4  2BC3               	goto	u1357
  3521     03C5  0BF1               	decfsz	??_LCD_Command+1,f
  3522     03C6  2BC3               	goto	u1357
  3523     03C7  2BC8               	nop2
  3524     03C8                     l1348:
  3525                           
  3526                           ;lcd.c: 63:     PORTD = (unsigned char)((PORTD & 0x0f) | (cmd<<4));
  3527     03C8  0872               	movf	LCD_Command@cmd,w
  3528     03C9  00F0               	movwf	??_LCD_Command
  3529     03CA  3004               	movlw	4
  3530     03CB                     u635:
  3531     03CB  1003               	clrc
  3532     03CC  0DF0               	rlf	??_LCD_Command,f
  3533     03CD  3EFF               	addlw	-1
  3534     03CE  1D03               	skipz
  3535     03CF  2BCB               	goto	u635
  3536     03D0  1283               	bcf	3,5	;RP0=0, select bank0
  3537     03D1  1303               	bcf	3,6	;RP1=0, select bank0
  3538     03D2  0808               	movf	8,w	;volatile
  3539     03D3  390F               	andlw	15
  3540     03D4  0470               	iorwf	??_LCD_Command,w
  3541     03D5  0088               	movwf	8	;volatile
  3542     03D6                     l1350:
  3543                           
  3544                           ;lcd.c: 64:  RD1 = 1;
  3545     03D6  1488               	bsf	8,1	;volatile
  3546     03D7                     l1352:
  3547                           
  3548                           ;lcd.c: 65:  __nop();
  3549     03D7  0000               	nop
  3550     03D8                     l1354:
  3551                           
  3552                           ;lcd.c: 66:  RD1 = 0;
  3553     03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3554     03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3555     03DA  1088               	bcf	8,1	;volatile
  3556                           
  3557                           ;lcd.c: 67:  _delay((unsigned long)((3)*(8000000/4000.0)));
  3558     03DB  3008               	movlw	8
  3559     03DC  00F1               	movwf	??_LCD_Command+1
  3560     03DD  30C9               	movlw	201
  3561     03DE  00F0               	movwf	??_LCD_Command
  3562     03DF                     u1367:
  3563     03DF  0BF0               	decfsz	??_LCD_Command,f
  3564     03E0  2BDF               	goto	u1367
  3565     03E1  0BF1               	decfsz	??_LCD_Command+1,f
  3566     03E2  2BDF               	goto	u1367
  3567     03E3  2BE4               	nop2
  3568     03E4                     l20:
  3569     03E4  0008               	return
  3570     03E5                     __end_of_LCD_Command:
  3571     007E                     btemp	set	126	;btemp
  3572     007E                     wtemp0	set	126
  3573                           
  3574                           	psect	config
  3575                           
  3576                           ;Config register CONFIG1 @ 0x2007
  3577                           ;	Oscillator Selection bits
  3578                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  3579                           ;	Watchdog Timer Enable bit
  3580                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  3581                           ;	Power-up Timer Enable bit
  3582                           ;	PWRTE = OFF, PWRT disabled
  3583                           ;	RE3/MCLR pin function select bit
  3584                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  3585                           ;	Code Protection bit
  3586                           ;	CP = OFF, Program memory code protection is disabled
  3587                           ;	Data Code Protection bit
  3588                           ;	CPD = OFF, Data memory code protection is disabled
  3589                           ;	Brown Out Reset Selection bits
  3590                           ;	BOREN = OFF, BOR disabled
  3591                           ;	Internal External Switchover bit
  3592                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  3593                           ;	Fail-Safe Clock Monitor Enabled bit
  3594                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  3595                           ;	Low Voltage Programming Enable bit
  3596                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  3597                           ;	In-Circuit Debugger Mode bit
  3598                           ;	DEBUG = 0x1, unprogrammed default
  3599     2007                     	org	8199
  3600     2007  20D5               	dw	8405
  3601                           
  3602                           ;Config register CONFIG2 @ 0x2008
  3603                           ;	Brown-out Reset Selection bit
  3604                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  3605                           ;	Flash Program Memory Self Write Enable bits
  3606                           ;	WRT = OFF, Write protection off
  3607     2008                     	org	8200
  3608     2008  3FFF               	dw	16383

Data Sizes:
    Strings     89
    Constant    15
    Data        16
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      69
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 5
		 -> password(CODE[5]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 5
		 -> pass_user(BANK0[5]), 

    sprintf@f	PTR const unsigned char  size(1) Largest target is 18
		 -> STR_1(CODE[18]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 17
		 -> buffer(BANK0[17]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    LCD_String_xy@msg	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[18]), STR_5(CODE[9]), STR_4(CODE[17]), STR_3(CODE[15]), 
		 -> STR_2(CODE[12]), buffer(BANK0[17]), 

    LCD_String@msg	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_6(CODE[18]), STR_5(CODE[9]), STR_4(CODE[17]), STR_3(CODE[15]), 
		 -> STR_2(CODE[12]), buffer(BANK0[17]), 


Critical Paths under _main in COMMON

    _main->_function_seguridad
    _function_seguridad->_LCD_String_xy
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _function_bloqueado->_LCD_String_xy
    _function_alarma->_LCD_String_xy
    _LCD_String_xy->_LCD_String
    _LCD_String->_LCD_Char
    _LCD_Clear->_LCD_Command
    _LCD_Init->_LCD_Command

Critical Paths under _main in BANK0

    _main->_function_monitoreo
    _function_seguridad->_keypad_getkey
    _function_monitoreo->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    7481
                           _LCD_Init
                    _function_alarma
                 _function_bloqueado
                 _function_monitoreo
                 _function_seguridad
                        _keypad_init
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _function_seguridad                                   4     4      0    2317
                                             10 COMMON     4     4      0
                           _LCD_Char
                          _LCD_Clear
                        _LCD_Command
                      _LCD_String_xy
                      _keypad_getkey
                            _strncmp
 ---------------------------------------------------------------------------------
 (3) _strncmp                                              6     3      3     319
                                              0 COMMON     6     3      3
 ---------------------------------------------------------------------------------
 (2) _keypad_getkey                                       23    23      0     542
                                              0 COMMON     4     4      0
                                              0 BANK0     19    19      0
 ---------------------------------------------------------------------------------
 (1) _function_monitoreo                                   8     8      0    2520
                                             19 BANK0      6     6      0
                      _LCD_String_xy
                  _monitoring_sensor
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             27    20      7    1237
                                              0 BANK0     19    12      7
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     314
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (2) _monitoring_sensor                                    1     1      0      26
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _function_bloqueado                                   3     3      0    1300
                                             10 COMMON     3     3      0
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (1) _function_alarma                                      3     3      0    1300
                                             10 COMMON     3     3      0
                          _LCD_Clear
                      _LCD_String_xy
 ---------------------------------------------------------------------------------
 (2) _LCD_String_xy                                        5     2      3    1256
                                              5 COMMON     5     2      3
                        _LCD_Command
                         _LCD_String
 ---------------------------------------------------------------------------------
 (3) _LCD_String                                           2     0      2     165
                                              3 COMMON     2     0      2
                           _LCD_Char
 ---------------------------------------------------------------------------------
 (4) _LCD_Char                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _LCD_Clear                                            2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (3) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Init
     _LCD_Command
   _function_alarma
     _LCD_Clear
       _LCD_Command
     _LCD_String_xy
       _LCD_Command
       _LCD_String
         _LCD_Char
   _function_bloqueado
     _LCD_Clear
     _LCD_String_xy
   _function_monitoreo
     _LCD_String_xy
     _monitoring_sensor
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
   _function_seguridad
     _LCD_Char
     _LCD_Clear
     _LCD_Command
     _LCD_String_xy
     _keypad_getkey
     _strncmp
   _keypad_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      45       5       86.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      53      12        0.0%
ABS                  0      0      53       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Fri Nov 03 15:43:44 2023

        ??_function_bloqueado 007A                             pc 0002            _function_monitoreo 0499  
          _function_seguridad 057F                  ?_LCD_Command 0070                            l20 03E4  
                          l23 041A                            l17 03AE                            l34 035E  
                          l50 02A3                            l37 02B3                            l29 0338  
                          fsr 0004                   ?_LCD_String 0073                           l202 0384  
                         l205 0312                           l109 06F3                           l214 02E0  
                         l215 02E6                           l217 02ED                           l190 04DD  
                         l327 07E5                           l178 057B                           l603 0498  
                         l613 0454                           l199 0612                           l787 0523  
                         _RC0 0038                           _RC1 0039                           _RD0 0040  
                         _RC2 003A                           _RD1 0041                           u710 0494  
                         u711 0493                           u640 0338                           u720 0421  
                         u800 0635                           u625 0401                           u641 0337  
                         u705 0488                           u721 0420                           u801 0634  
                         u650 045D                           u810 0645                           u635 03CB  
                         u651 045C                           u811 0644                           u740 0433  
                         u900 068C                           u820 064C                           u741 0432  
                         u901 068B                           u821 064B                           u670 046F  
                         u750 043D                           u910 069C                           u830 0653  
                         u671 046E                           u751 043C                           u735 0425  
                         u911 069B                           u831 0652                           u920 06A3  
                         u840 065A                           u665 0461                           u921 06A2  
                         u841 0659                           u690 0480                           u770 0450  
                         u930 06AA                           u850 0660                           u691 047F  
                         u771 044F                           u755 0439                           u931 06A9  
                         u851 065F           ?_function_monitoreo 0070                           u780 0340  
                         u940 06B1                           u860 0670                           u781 033F  
                         u685 0470                           u765 0444                           u941 06B0  
                         u861 066F                           u950 06B8                           u870 0677  
                         u790 061B                           u695 047C                           u951 06B7  
                         u871 0676                           u960 06C8                           u880 067E  
                         u961 06C7                           u881 067D                           u970 06CF  
                         u890 0685                           u971 06CE                           u891 0684  
                         u980 06D6                           u981 06D5                           u990 06DD  
                         u991 06DC           ?_function_seguridad 0070                           _idx 0024  
                         fsr0 0004                           indf 0000                   LCD_Char@dat 0072  
                        l1320 03F0                          l1400 0433                          l1330 040C  
                        l1322 03F1                          l1402 043D                          l1340 03BA  
                        l1332 040D                          l1324 03F2                          l1316 03E6  
                        l1420 034B                          l1412 033A                          l1404 0443  
                        l1500 06AD                          l1350 03D6                          l1342 03BB  
                        l1334 040E                          l1326 03F5                          l1318 03EF  
                        l1422 034F                          l1414 033A                          l1406 044A  
                        l1510 06C9                          l1502 06B1                          l1430 0613  
                        l1352 03D7                          l1344 03BC                          l1336 03B0  
                        l1328 03FE                          l1360 0322                          l1424 0355  
                        l1416 0340                          l1408 0450                          l1600 07BA  
                        l1520 06D9                          l1512 06CB                          l1504 06B8  
                        l1432 0628                          l1354 03D8                          l1346 03BF  
                        l1338 03B9                          l1426 02A4                          l1362 0328  
                        l1418 0344                          l1530 02D7                          l1370 0460  
                        l1610 07E1                          l1602 07BE                          l1514 06D0  
                        l1506 06C0                          l1522 06DD                          l1450 0646  
                        l1442 062D                          l1434 0628                          l1348 03C8  
                        l1428 02AA                          l1356 0313                          l1540 02EC  
                        l1532 02D8                          l1380 0486                          l1372 0467  
                        l1364 0455                          l1604 07C4                          l1524 06E3  
                        l1516 06D2                          l1508 06C2                          l1460 0656  
                        l1452 0648                          l1444 0635                          l1436 062B  
                        l1620 04E0                          l1700 060F                          l1358 0314  
                        l1534 02DE                          l1382 0487                          l1374 046B  
                        l1366 0457                          l1390 041B                          l1550 0702  
                        l1606 07CD                          l1710 04C4                          l1526 06F0  
                        l1518 06D7                          l1470 0671                          l1454 064D  
                        l1446 063D                          l1462 065A                          l1622 04E8  
                        l1630 0513                          l1702 0610                          l1640 0390  
                        l1720 030F                          l1712 02EE                          l1536 02E4  
                        l1384 048E                          l1376 046F                          l1368 045D  
                        l1392 0421                          l1608 07DD                          l1560 0713  
                        l1552 0707                          l1544 06F7                          l1704 0499  
                        l1480 0681                          l1472 0673                          l1464 0660  
                        l1456 064F                          l1448 063F                          l1632 0521  
                        l1624 04F8                          l1642 0396                          l1730 0380  
                        l1722 035F                          l1714 02F3                          l1538 02EA  
                        l1378 0480                          l1386 0494                          l1394 0424  
                        l1570 0744                          l1562 0730                          l1554 070B  
                        l1546 06F9                          l1706 04A3                          l1490 069D  
                        l1474 0678                          l1466 0668                          l1482 0685  
                        l1458 0654                          l1618 04DF                          l1650 0295  
                        l1644 039C                          l1636 0385                          l1724 0364  
                        l1716 02FE                          l1396 042B                          l1572 0749  
                        l1564 0738                          l1556 0712                          l1548 06FC  
                        l1708 04A7                          l1492 069F                          l1484 068C  
                        l1476 067A                          l1468 066A                          l1628 050B  
                        l1660 0584                          l1652 029F                          l1740 0538  
                        l1732 0524                          l1646 03A2                          l1638 0388  
                        l1726 036F                          l1718 0302                          l1398 042F  
                        l1590 077C                          l1582 0767                          l1566 073C  
                        l1494 06A4                          l1486 0694                          l1478 067F  
                        l1670 05A6                          l1662 058F                          l1654 02A0  
                        l1750 054B                          l1742 053C                          l1734 052A  
                        l1648 03A8                          l1728 0373                          l1592 0780  
                        l1584 076B                          l1568 0740                          l1496 06A6  
                        l1488 0696                          l1680 05D9                          l1672 05AE  
                        l1664 0595                          l1656 057F                          l1760 0569  
                        l1752 0552                          l1744 0542                          l1736 052E  
                        l1594 0786                          l1586 0771                          l1578 074B  
                        l1498 06AB                          l1682 05DE                          l1690 05F1  
                        l1674 05B2                          l1666 059B                          l1658 057F  
                        l1762 056F                          l1754 0558                          l1746 0546  
                        l1738 0533                          l1596 0789                          l1588 0777  
                        l1692 05F6                          l1684 05E9                          l1676 05BF  
                        l1668 05A0                          l1764 0575                          l1756 055D  
                        l1748 054A                          l1598 07B5                          l1694 0601  
                        l1686 05ED                          l1678 05C7                          l1758 0563  
                        l1696 0607                          l1688 05EE                          l1786 0725  
                        l1698 0609                          STR_1 0022                          STR_2 0066  
                        STR_3 0057                          STR_4 0046                          STR_5 0072  
                        STR_6 0034                          u1000 06F0                          u1001 06EF  
                        u1010 02DE                          u1011 02DD                          u1020 02E4  
                        u1100 07DD                          u1021 02E3                          u1101 07DC  
                        u1005 06EC                          u1030 02EA                          u1110 04E8  
                        u1031 02E9                          u1111 04E7                          u1040 0702  
                        u1120 04F8                          u1200 055D                          u1041 0701  
                        u1121 04F7                          u1201 055C                          u1050 0740  
                        u1130 0521                          u1210 0569                          u1051 073F  
                        u1131 0520                          u1211 0568                          u1060 0766  
                        u1140 05A0                          u1220 0575                          u1061 0765  
                        u1141 059F                          u1221 0574                          u1070 0771  
                        u1150 05C7                          u1071 0770                          u1151 05C6  
                        u1080 0777                          u1160 05D9                          u1081 0776  
                        u1065 0762                          u1161 05D8                          u1090 07CD  
                        u1170 060F                          u1307 0379                          u1091 07CC  
                        u1171 060E                          u1180 04A3                          u1317 03F9  
                        u1181 04A2                          u1237 05B8                          u1190 0552  
                        u1327 0415                          u1247 0639                          u1191 0551  
                        u1337 02AE                          u1257 0664                          u1347 038C  
                        u1267 0690                          u1357 03C3                          u1277 06BC  
                        u1367 03DF                          u1287 04D7                          u1297 0308  
                        _main 0524                          btemp 007E          ??_function_monitoreo 004F  
        ??_function_seguridad 007A                          start 0000                 _LCD_String_xy 0339  
            __end_of_LCD_Char 041B              __end_of_LCD_Init 03AF                         ?_main 0070  
             __end_of___lwdiv 0499               __end_of___lwmod 0455                         _PORTB 0006  
                       _PORTD 0008                         _PORTE 0009                         _TRISB 0086  
                       _TRISC 0087                         _TRISD 0088                         _TRISE 0089  
             __end_of_dpowers 001D                  ?_keypad_init 0070                         pclath 000A  
                       status 0003                         wtemp0 007E               __end_of_sprintf 07E6  
             __end_of_strncmp 0524                ?_LCD_String_xy 0075               __initialization 07E6  
                __end_of_main 057F                        ??_main 007E             __end_of_LCD_Clear 02B4  
         keypad_getkey@letras 003C                        _ANSELH 0189              LCD_String_xy@msg 0076  
            LCD_String_xy@pos 0075              LCD_String_xy@row 0078                        _OSCCON 008F  
                   ??___lwdiv 0074                     ??___lwmod 007B                        _buffer 0026  
                      _estado 0025              __end_of_password 0022               _var_sensor_hall 0022  
                   ??_sprintf 0043                     ??_strncmp 0073             ??_function_alarma 007A  
                   ?_LCD_Char 0070       __end_of__initialization 07FC                     ?_LCD_Init 0070  
             ??_LCD_String_xy 0078         function_seguridad@key 007D                __pcstackCOMMON 0070  
                __pidataBANK0 02B4                  ??_LCD_String 0075                _OPTION_REGbits 0081  
                  __pbssBANK0 0020                    ??_LCD_Char 0070                    ??_LCD_Init 0073  
          __end_of_LCD_String 0339                    __pmaintext 0524                 _keypad_getkey 0613  
                  __stringtab 0003                 LCD_String@msg 0073             _monitoring_sensor 02D7  
          ?_monitoring_sensor 0070                       ___lwdiv 0455                       ___lwmod 041B  
                     __ptext1 0295                       __ptext2 057F                       __ptext3 04DE  
                     __ptext4 0613                       __ptext5 0499                       __ptext6 06F4  
                     __ptext7 041B                       __ptext8 0455                       __ptext9 02D7  
         ??_monitoring_sensor 0070                ?_keypad_getkey 0070                       _dpowers 0013  
                   _LCD_Clear 02A4                       _sprintf 06F4                       clrloop0 028E  
                     _strncmp 04DE          end_of_initialization 07FC                LCD_Command@cmd 0072  
monitoring_sensor@alarm_activ 0070     __end_of_monitoring_sensor 02EE              _var_sensor_metal 0021  
             _function_alarma 035F                    ?_LCD_Clear 0070                 ??_LCD_Command 0070  
             ??_keypad_getkey 0070            keypad_getkey@F1268 0055           start_initialization 07E6  
          keypad_getkey@valor 004C         __end_of_LCD_String_xy 035F                    init_fetch0 02C4  
     __end_of_function_alarma 0385                   __pdataBANK0 0055           __end_of_LCD_Command 03E5  
                   ___latbits 0002                 __pcstackBANK0 003C                   ??_LCD_Clear 0073  
               ??_keypad_init 0070                   sprintf@ccnt 0048                   sprintf@flag 0047  
                 sprintf@prec 004A              ___lwdiv@dividend 0072    __end_of_function_bloqueado 0313  
                    ?___lwdiv 0070                      ?___lwmod 0077                     __pstrings 0003  
            ___lwdiv@quotient 0074         LCD_String_xy@location 0079                      ?_sprintf 003C  
                    ?_strncmp 0070    __end_of_function_monitoreo 04DE    __end_of_function_seguridad 0613  
                    _LCD_Char 03E5                      _LCD_Init 0385                     _pass_user 0037  
         __end_of_keypad_init 02A4                     clear_ram0 028D              ?_function_alarma 0070  
                 _LCD_Command 03AF                   __stringbase 0012                 _var_sensor_ir 0023  
          __end_of__stringtab 0013                    sprintf@val 004B               ___lwdiv@divisor 0070  
             ___lwdiv@counter 0076                      __ptext10 02EE                      __ptext11 035F  
                    __ptext12 0339                      __ptext13 0313                      __ptext14 03E5  
                    __ptext15 02A4                      __ptext16 0385                      __ptext17 03AF  
                 _keypad_init 0295                    strncmp@len 0071                      _intentos 0020  
                    _password 001D                    _LCD_String 0313         __end_of_keypad_getkey 06F4  
                    init_ram0 02C8                     sprintf@ap 0046                     sprintf@sp 004D  
            ___lwmod@dividend 0079                     strncmp@s1 0075                     strncmp@s2 0070  
                   stringcode 000D                      sprintf@c 004E                      sprintf@f 003C  
          _function_bloqueado 02EE               ___lwmod@divisor 0077               ___lwmod@counter 007B  
                    stringdir 000D                      stringtab 0003           ?_function_bloqueado 0070  
              keypad_getkey@i 004D  
